sprintf("Factorial of %s is ",x)
print(fact)
}
factorial(4)
factorial(8)
factorial(12)
for (i in 1:x) {
fact <- fact * i
}
sprintf("Factorial of %s is ",x)
print("Factorial of %s is ",fact)
factorial <- function(x) {
fact <- 1
for (i in 1:x) {
fact <- fact * i
}
sprintf("Factorial of %s is ",x)
print("Factorial of %s is ",fact)
}
factorial(12)
print("Factorial of %i is ",fact)
print("Factorial of %d is ",fact)
factorial <- function(x) {
fact <- 1
for (i in 1:x) {
fact <- fact * i
}
sprintf("Factorial of %s is ",x)
print("Factorial of %d is ",fact)
}
factorial(12)
factorial <- function(x) {
fact <- 1
for (i in 1:x) {
fact <- fact * i
}
sprintf("Factorial of %s is ",x)
sprintf("Factorial of %d is ",fact)
}
factorial(12)
for (i in 1:x) {
fact <- fact * i
}
sprintf("Factorial of %d is ",fact)
factorial <- function(x) {
fact <- 1
for (i in 1:x) {
fact <- fact * i
}
sprintf("Factorial of %d is ",fact)
}
factorial(12)
factorial <- function(x) {
fact <- 1
for (i in 1:x) {
fact <- fact * i
}
sprintf("Factorial of %d is %d ",x,fact)
}
factorial(12)
print(seq(from = 20, to = 50, by = 5))
##Find 12 factorial
Below is the program
```r{}
factorial <- function(x) {
if x<=0
return 0
fact <- 1
for (i in 1:x) {
fact <- fact * i
}
sprintf("Factorial of %d is %d ",x,fact)
return fact
}
```
##Find 12 factorial
Below is the program
```r{}
factorial <- function(x) {
if x<=0 {
return 0
}
fact <- 1
for (i in 1:x) {
fact <- fact * i
}
sprintf("Factorial of %d is %d ",x,fact)
return fact
}
```
factorial <- function(x) {
if x<=0 {
return 0
}
fact <- 1
for (i in 1:x) {
fact <- fact * i
}
sprintf("Factorial of %d is %d ",x,fact)
return fact
}
factorial <- function(x) {
if x<=0 {
return 0
}
fact <- 1
for (i in 1:x) {
fact <- fact * i
}
sprintf("Factorial of %d is %d ",x,fact)
return fact
}
factorial(4)
factorial <- function(x) {
if x<=0 {
return 0
}
fact <- 1
for (i in 1:x) {
fact <- fact * i
}
sprintf("Factorial of %d is %d ",x,fact)
return fact
}
factorial(0
factorial <- function(x) {
if x<=0 {
return 0
}
fact <- 1
for (i in 1:x) {
fact <- fact * i
}
sprintf("Factorial of %d is %d ",x,fact)
return fact
}
factorial(0)
install.packages("mosaic")
library(mosaic)
install.packages("mosaic")
library(mosaic)
g = D(x^2 ~ x)
install.packages("mosaic")
g = D(x^2 ~ x)
g(1)
install.packages("mosaic")
library(mosaic)
g = D(x^2 ~ x)
g(1)
g(1)
##install.packages("mosaic")
library(mosaic)
g = D(x^2 ~ x)
g(1)
g=D(x^2)
f=expression(x^2)
D(f, 'x')
f(2)
g=D(f, 'x')
g(2)
g(2)
g(2)
g(2)
install.packages("Deriv")
library(Deriv)
f <- function(x) {
1 - e^(-2x)
}
g <- deriv(f)
g(2)
g <- deriv(f~x)
library("mosaic", lib.loc="~/R/win-library/3.5")
g(2)
g <- deriv(f)
deriv(f)
g <- Deriv(f)
g(2)
install.packages("mosaicCalc")
library(mosaicCalc)
D(f)
D(1 - e^(-2x))
D(1 - exp^(-2x))
D(1 - exp^(-2x)~x)
D(x^2~x)
D(f~x)
D((1-exp^(-2x))~x)
g=D((1-exp^(-2x))~x)
g=D((1-exp^(-2x))~x)
g=D(1-exp^(-2x)~  x)
g=D(1-e^(-2x)~  x)
#Find the derivative for the functions below with respect to x
# 1. F(x|x≥0)=1−e−λx
#d/dx(1-e^-Cx) => d/dx(1) - d/dx(e^-Cx) => 0 - Ce^(-Cx) => -Ce^(-Cx)
print(exp(2))
g=D(1-exp^(-2x)~  x)
g=D(1-e^(-2x)~  x)
g=D((x-a)/(b-a)x)
g=D((x-a)/(b-a)~x)
g(2)
g(2,2)
Deriv(f)
B
B <- matrix(c(1,3,4,2,3,6,3,1,8),3,3)
print B
print(B)
---
title: "DATA science week1 assignment"
output: html_document
---
### 1. Find 12 factorial
Below is the program
```r{}
factorial <- function(x) {
if x<=0 {
return 0
}
fact <- 1
for (i in 1:x) {
fact <- fact * i
}
sprintf("Factorial of %d is %d ",x,fact)
return fact
}
```
```r{}
kelvin_to_celsius <- function(temp_K) {
temp_C <- temp_K - 273.15
return(temp_C)
}
# absolute zero in Celsius
kelvin_to_celsius(0)
factorial(12)
```
The factorial of 12 is `r factorial(10)`
### 2. Create a numeric vector containing numbers from 20 to 50 in a sequence of 5
print(seq(from = 20, to = 50, by = 5))
---
title: "DATA science week1 assignment"
output: html_document
---
### 1. Find 12 factorial
Below is the program
```r{}
factorial <- function(x) {
if x<=0 {
return 0
}
fact <- 1
for (i in 1:x) {
fact <- fact * i
}
sprintf("Factorial of %d is %d ",x,fact)
return fact
}
```
```r{}
kelvin_to_celsius <- function(temp_K) {
temp_C <- temp_K - 273.15
return(temp_C)
}
# absolute zero in Celsius
kelvin_to_celsius(0)
factorial(12)
```
The factorial of 12 is `r factorial(10)`
### 2. Create a numeric vector containing numbers from 20 to 50 in a sequence of 5
print(seq(from = 20, to = 50, by = 5))
### 1. Find 12 factorial
Below is the program
```r{}
factorial <- function(x) {
if x<=0 {
return 0
}
fact <- 1
for (i in 1:x) {
fact <- fact * i
}
sprintf("Factorial of %d is %d ",x,fact)
return fact
}
```
```r{}
kelvin_to_celsius <- function(temp_K) {
temp_C <- temp_K - 273.15
return(temp_C)
}
# absolute zero in Celsius
kelvin_to_celsius(0)
factorial(12)
```
The factorial of 12 is `r factorial(10)`
### 2. Create a numeric vector containing numbers from 20 to 50 in a sequence of 5
print(seq(from = 20, to = 50, by = 5))
install.packages(dice)
install.package(dice)
install.packages("dice")
library("dice")
getEventProb(1, 2, 6, NA)
getEventProb(1, 2, 6, list(1))
getEventProb(1, 2, 6, list(2))
getEventProb(1, 2, 6, list(5))
getEventProb(1, 2, 6, list(12))
getEventProb(1, 2, 6, list(7))
getEventProb(1, 2, 6, list(12))
getEventProb(1, 2, 6, list(8))
getEventProb(1, 2, 6, list(5))
getEventProb(1, 2, 6, list(12))
print(mat)
mat
print(mat)
toString(mat)
?matrix
mat
source('~/.active-rstudio-document')
mat1
getEventProb(1, 2, 6, list(5))
getEventProb(1, 2, 6, list(5))
install.packages("dice")
library("dice")
getEventProb(1, 2, 6, list(5))
getEventProb(1, 2, 6, list(12))
install.packages("tinytex")
??mysql
install.packages("RMySQL")
library(RMySQL)
?MySQL
con <- dbConnect(RMySQL::MySQL(), dbname="flights")
dbConnect(MySQL(), user='admin',password='admin',dbname='flights', host='localhost')
dbConnect(MySQL(), user='admin',password='admin',dbname='flights', host='localhost')
dbConnect(MySQL(), user='root',password='root',dbname='flights', host='localhost')
dbConnect(dbDriver('MySQL'), user='root',password='root',dbname='flights', host='localhost')
dbConnect(dbDriver('MySQL'), user='root',password='root',dbname='flights', host='localhost')
dbConnect(dbDriver('MySQL'), user='root',password='root',dbname='flights', host='localhost')
dbConnect(dbDriver('MySQL'), user='root',password='root',dbname='flights', host='localhot')
dbConnect(dbDriver('MySQL'), user='root',password='root',dbname='flights', host='localhost')
dbConnect(dbDriver('MySQL'), user='root',password='root',dbname='flights', host='localhost')
dbConnect(dbDriver('MySQL'), user='root',password='root',dbname='flights', host='localhost')
dbConnect(dbDriver('MySQL'), user='root',password='root',dbname='flights', host='localhost')
dbDriver <- dbDriver('MySQL')
library(MySQL)
install.packages("RMySQL")
library(MySQL)
library("RMySQL", lib.loc="~/R/win-library/3.5")
?dbConnect
dbDriver <- RMySQL::dbConnect()
dbDriver <- RMySQL::dbConnect(drv = dbDriver())
db <- dbConnect(MySQL(), dbname="cuny_607", user="root", password="root", host="localhost")
db <- dbConnect(MySQL(), dbname="MySQL80CUNY", user="root", password="root", host="localhost")
db <- dbConnect(MySQL(), dbname="MySQL80CUNY", user="root", password="root", host="localhost")
db <- dbConnect(MySQL(), dbname="MySQL80CUNY", user="root", password="root", host="localhost")
db <- dbConnect(MySQL(), dbname="MySQL80CUNY", user="root", password="root", host="localhost")
db <- dbConnect(MySQL(), dbname="cuny_607", user="root", password="root", host="localhost")
dbListTables(db)
??RMySQL
??RMySQL::`dbFetch,MySQLResult,missing-method`
rs <- dbSendQuery(db, "select * from cuny_607.popular_movies_2018 as movies inner join cuny_607.viewer_ratings as ratings on movies.movie_id = ratings.movie_id")
data <- dbFetch(rs, n=1000)
View(data)
class(data)
data <- dbFetch(rs, n=1000)
View(data)
dbConnection <- dbConnect(MySQL(), dbname="cuny_607", user="root", password="root", host="localhost")
rs <- dbSendQuery(dbConnection, "select * from cuny_607.popular_movies_2018 as movies inner join cuny_607.viewer_ratings as ratings on movies.movie_id = ratings.movie_id")
data <- dbFetch(rs, n=1000)
movieUserRatings <- dbFetch(rs, n=1000)
View(movieUserRatings)
rs <- dbSendQuery(dbConnection, "select * from cuny_607.popular_movies_2018 as movies inner join cuny_607.viewer_ratings as ratings on movies.movie_id = ratings.movie_id")
movieUserRatings <- dbFetch(rs, n=1000)
?boxplot
boxOfficeData <- table(movieUserRatings$box_office)
barplot(boxOfficeData, xlab="Movies")
?barplot
?matrix
movieUserRatings$title
unique(movieUserRatings$title)
titles <- unique(movieUserRatings)
titles <- unique(movieUserRatings$title)
titles
box_office_collection <- movieUserRatings$title[titles]
library(ggplot2)
ggplot(movieUserRatings, aes(x=title, y=box_office)) + geom_bar()
ggplot(movieUserRatings, aes(x=title, y=box_office)) + geom_bar(stat = "identity")
ggplot(movieUserRatings, aes(title, box_office)) + geom_bar(stat = "identity")
ggplot(movieUserRatings, aes(titles, box_office_collection)) + geom_bar(stat = "identity")
rlang::last_error()
movieUserRatings
db <- dbConnect(MySQL(), dbname="cuny_607", user="root", password="root", host="localhost")
rs <- dbSendQuery(db, "select movies.*, ratings.rating, ratings.overall_Feel, ratings.recommend_others from cuny_607.popular_movies_2018 as movies inner join cuny_607.viewer_ratings as ratings on movies.movie_id = ratings.movie_id")
data <- dbFetch(rs, n=1000)
View(data)
ggplot(movieUserRatings, aes(title, box_office)) + geom_bar(stat = "identity")
titles <- unique(movieUserRatings$title)
box_office_collection <- movieUserRatings$title[titles]
ggplot(movieUserRatings, aes(titles, box_office_collection)) + geom_bar(stat = "identity")
movieUserRatings
dbConnection <- dbConnect(MySQL(), dbname="cuny_607", user="root", password="root", host="localhost")
View(dbConnection)
resultSet <- dbSendQuery(dbConnection, "select movies.*, ratings.rating, ratings.overall_Feel, ratings.recommend_others from cuny_607.popular_movies_2018 as movies inner join
cuny_607.viewer_ratings as ratings on movies.movie_id = ratings.movie_id")
movieUserRatings <- dbFetch(resultSet, n=1000)
View(movieUserRatings)
library(ggplot2)
?ggplot
ggplot(movieUserRatings, aes(title, box_office)) + geom_bar(stat = "identity")
View(movieUserRatings)
ggplot(movieUserRatings, aes(title, mean(rating)) + geom_bar(stat = "identity")
;
ggplot(movieUserRatings, aes(title, mean(rating))) + geom_bar(stat = "identity")
ggplot(movieUserRatings, aes(title, avg(rating))) + geom_bar(stat = "identity")
ggplot(movieUserRatings, aes(x=factor(title), y=rating)) + stat_summary(fun.y="mean", geom="bar")
?ggplot
ggplot(movieUserRatings, aes(x=factor(title), y=rating), xlim(c(1:5))) + stat_summary(fun.y="mean", geom="bar")
ggplot(movieUserRatings, aes(x=factor(title), y=rating), xlim(c(1:10))) + stat_summary(fun.y="mean", geom="bar")
ggplot(movieUserRatings, aes(x=factor(title), y=rating), xlab("Movies")) + stat_summary(fun.y="mean", geom="bar")
ggplot(movieUserRatings, aes(x=factor(title), y=rating), xlab("Movies")) + stat_summary(fun.y="mean", geom="bar")
ggplot(movieUserRatings, aes(x=factor(title), y=rating), xlab = "Movies")+ stat_summary(fun.y="mean", geom="bar")
ggplot(movieUserRatings, aes(x=factor(title), y=rating)) + stat_summary(fun.y="mean", geom="bar")
??RMySQL
library(RMySQL)
library(MySQL)
install.packages("RMySQL")
install.packages("RMySQL")
library(RMySQL)
source("more/cdc.R")
setwd("C:\\CUNY\\GIT\\CUNY\Semester1\606\\Week1\\Lab\\Lab1")
setwd("C://CUNY//GIT//CUNY//Semester1//606//Week1//Lab//Lab1")
summary(cdc$height)
source("more/cdc.R")
summary(cdc$height)
summary(cdc$height)
cdc$gender == "m"
?count
length(cdc$gender == "m")
length(cdc$gender == "m" == TRUE)
length((cdc$gender == "m") == TRUE)
length((cdc$gender == "m") >0)
cdc$gender == "m"
cdc$gender == "m" >0
?sum
?count
sum((cdc$gender == "m"))
which(cdc$gender=="m")
lenght(which(cdc$gender=="m"))
length(which(cdc$gender=="m"))
length(which(cdc$genhlth == "excellent")/20000
length(which(cdc$genhlth == "excellent"))/20000
length(which(cdc$genhlth == "excellent"))/20000
nrow(subset(cdc, gender=="m"))
under23_and_smoke <- subset(cdc, age<23 & smoke100>0)
subset(cdc, age<23 & smoke100>0)
subset(cdc, age<23 & smoke100>0)
head(cdc)
?plot
plot(x=cdc$weight, y=cdc$wtdesire)
plot(x=cdc$weight, y=cdc$wtdesire, ab)
wdiff <- cdc$wtdesire - cdc$weight
cdc$wtdesire - cdc$weight
boxplot(widff)
boxplot(wdiff)
boxplot(wdiff ~ cdc$gender)
?boxplot
boxplot(wdiff ~ cdc$gender, names=c("Male", "Female"))
boxplot(wdiff ~ cdc$gender, names=c("Male", "Female"), ylab="WDiff")
boxplot(wdiff ~ cdc$gender, names=c("Male", "Female"), ylab="Weight Difference")
?hist
meanWeight <- mean(cdc$weight)
sdWeight <- sd(cdc$weight)
hist(x = cdc$weight, breaks=sdWeight)
subset(cdc$weight, weight<(meanWeight + sdWeight) & weight>(meanWeight-sdWeight))
subset(cdc, weight<(meanWeight + sdWeight) & weight>(meanWeight-sdWeight))
selectedWeights <- subset(cdc, weight<(meanWeight + sdWeight) & weight>(meanWeight-sdWeight))
selectedSubSet <- subset(cdc, weight<(meanWeight + sdWeight) & weight>(meanWeight-sdWeight))
nrow(selectedSubSet)
nrow(selectedSubSet)/20000
subset(cdc$weight, weight<(meanWeight + sdWeight) & weight>(meanWeight-sdWeight))
proportion <- nrow(selectedSubSet)/nrow(cdc)
proportion
summary(wdiff)
summary(subset(cdc, gender=="m"))
summary(subset(wdiff, cdc$gender=="m"))
summary(subset(wdiff, cdc$gender=="f"))
nrow(cdc)
nrow(subset(cdc, genhlth=="excellent"))
nrow(subset(cdc, genhlth=="excellent"))/20000
table(cdc$gender,cdc$smoke100)
?table
table(cdc$gender,cdc$smoke100, row.names(c("Male","Female")))
table(cdc$gender,cdc$smoke100, row.names = c("Male","Female"))
table(cdc$gender,cdc$smoke100, row.names() = c("Male","Female"))
table(cdc$gender,cdc$smoke100, row.names = c("Male","Female"))
table(cdc$gender,cdc$smoke100)
bmi <- (cdc$weight / cdc$height^2) * 703
boxplot(bmi ~ cdc$smoke100)
boxplot(bmi ~ cdc$hlthplan)
boxplot(bmi ~ cdc$exerany)
scores <- c(57, 66, 69, 71, 72, 73, 74, 77, 78, 78, 79, 79, 81, 81, 82, 83, 83, 88, 89, 94)
boxplot(scores)
summary(scores)
install.packages("RMySQL", repos="http://cran.us.r-project.org")
library(RMySQL)
install.packages("RMySQL", repos = "http://cran.us.r-project.org")
knitr::opts_chunk$set(echo = FALSE)
install.packages("RMySQL", repos="http://cran.us.r-project.org", quiet = T)
library(RMySQL)
install.packages("ggplot2", repos='http://cran.us.r-project.org', quiet = T)
library(ggplot2)
install.packages("RMySQL", repos="http://cran.us.r-project.org", quiet = T)
library(RMySQL)
install.packages("RMySQL", repos = "http://cran.us.r-project.org", quiet = T)
install.packages("RMySQL", repos="http://cran.us.r-project.org", quiet = T)
library(RMySQL)
