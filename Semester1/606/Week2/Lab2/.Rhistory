sd(var(a))
sd(a)
c
prices_luggages
prices_luggages[0[]]
prices_luggages[0]
prices_luggages[1]
prices_luggages[2]
variance <- (0 - avg_revenue)*passenger_luggages[1] + (25 - avg_revenue)*passenger_luggages[2] + (35 - avg_revenue) * passenger_luggages[3]
avg_revenue <- sum(passenger_luggages * prices_luggages)
variance <- (0 - avg_revenue)*passenger_luggages[1] + (25 - avg_revenue)*passenger_luggages[2] + (35 - avg_revenue) * passenger_luggages[3]
variance
passenger_luggages_prob <- c(.54, .34, .12)
prices_luggages <- c(0, 25, 25+35)
avg_revenue <- sum(passenger_luggages_prob * prices_luggages)
variance <- sqrt(0 - avg_revenue)*passenger_luggages_prob[1] + sqrt(25 - avg_revenue)*passenger_luggages_prob[2] + sqrt(35 - avg_revenue) * passenger_luggages_prob[3]
passenger_luggages_prob <- c(.54, .34, .12)
prices_luggages <- c(0, 25, 25+35)
avg_revenue <- sum(passenger_luggages_prob * prices_luggages)
sqrt(0 - avg_revenue)*passenger_luggages_prob[1]
sqrt(0 - avg_revenue) * passenger_luggages_prob[1]
avg_revenue
avg_revenue
variance <- (0 - avg_revenue)^2 * passenger_luggages_prob[1] + (25 - avg_revenue)^2 * passenger_luggages_prob[2] + (35 - avg_revenue)^2 * passenger_luggages_prob[3]
variance
(0 - avg_revenue)^2 * passenger_luggages_prob[1]
(25 - avg_revenue)^2 * passenger_luggages_prob[2]
variance <- (0 - avg_revenue)^2 * passenger_luggages_prob[1] + (25 - avg_revenue)^2 * passenger_luggages_prob[2] + (60 - avg_revenue)^2 * passenger_luggages_prob[3]
variance
standard_dev <- sqrt(variance)
standard_dev
knitr::opts_chunk$set(echo = TRUE)
#Standard deviation
sd_120 -< standard_dev * 120
#Standard deviation
sd_120 <-  standard_dev * 120
#Standard deviation
sd_120 <-  standard_dev * 120
#Standard deviation
variance_120 <- variance * 120
sd_120 <- sqrt(variance_120)
income_brackets <- c("$1 to $9,999",  "$10,000 to $14,999", "$15,000 to $24,999", "$25,000 to $34,999", "$35,000 to $49,999", "$50,000 to $64,999", "$65,000 to $74,999", "$75,000 to $99,999", "$100,000 or more")
perc <- c(2.2, 4.7, 15.8, 18.3, 21.2, 13.9, 5.8, 8.4, 9.7)
barplot(income_brackets, perc)
barplot(perc, income_brackets)
barplot(perc)
barplot(perc names(income_brackets))
barplot(perc, names(income_brackets))
barplot(perc, names(income_brackets))
barplot(perc)
barplot(perc, names.arg = income_brackets)
barplot(perc, names.arg = (income_brackets))
barplot(perc, names.arg = income_bracket))
barplot(perc, names.arg = income_bracket)
barplot(perc, names.arg = income_brackets)
barplot(perc, names.arg = income_brackets)
kobe_streak <- calc_streak(kobe$basket)
load("more/kobe.RData")
head(kobe)
setwd("C://CUNY//GIT//CUNY//Semester1//606//Week2//Lab2")
load("more/kobe.RData")
head(kobe)
kobe_streak <- calc_streak(kobe$basket)
kobe_streak
table(kobe_streak)
?table
barplot(table(kobe_streak))
table(sample(outcomes, size = 100, replace = TRUE, prob = c(0.2, 0.8)))
outcomes <- c("heads", "tails")
table(sample(outcomes, size = 100, replace = TRUE, prob = c(0.2, 0.8)))
sim_basket <- sample(x = outcomes, size = 133, prob = c(.45, .55))
sim_basket <- sample(x = outcomes, size = 133, prob = c(.45, .55), replace=T)
sim_basket
calc_streak(sim_basket)
outcomes <- c("H", "M")
sim_basket <- sample(x = outcomes, size = 133, prob = c(.45, .55), replace=T)
calc_streak(sim_basket)
table(calc_streak(sim_basket))
outcomes <- c("H", "M")
sim_basket <- sample(x = outcomes, size = 133, prob = c(.45, .55), replace = T)
barplot(table(sim_streaks))
sim_streaks <- calc_streak(sim_basket)
table(sim_streaks)
barplot(table(sim_streaks))
set.seed(54321) # for reproducibility
data.1 <- sample(1000:2000, 10)
data.2 <- sample(seq(0, 5, 0.1), 10)
# Use xpd = F to avoid plotting the bars below the axis
barplot(data.1, las = 1, col = "black", ylim = c(500, 3000), xpd = F)
par(new = T)
# Plot the new data with a different ylim, but don't plot the axis
barplot(data.2, las = 1, col = "white", ylim = c(0, 30), yaxt = "n")
# Add the axis on the right
axis(4, las = 1)
kobe_streak
sim_basket
sim_basket
sim_streaks
barplot(kobe_streak, las = 1, col = "black", ylim = c(500, 3000), xpd = F)
barplot(sim_streaks, las = 1, col = "white", ylim = c(500, 3000), yaxt = "n")
axis(4, las = 1)
data.1 <- sample(1000:2000, 10)
data.1
barplot(kobe_streak)
barplot(kobe_streak)
barplot(table(sim_streaks))
barplot(table(kobe_streak))
?barplot
x1=seq(0,2,by=0.3)
x1
barplot(x1,col="red")
table(sim_streaks)
table(sim_streaks, kobe_streak)
sim_streaks
kobe_streak
a <- c(0,2,1,2,2)
b <- c(2,1,1,1,2)
table(a, b)
barplot(table(a,b))
count(kobe_streak)
kobe_streak
length(kobe_streak)
length(sim_streaks)
kobe$basket
sim_basket
calc_streak(kobe$basket)
calc_streak(sim_basket
)
table(a, b)
barplot(table(a,b))
x <- cacl_streak(kobe$basket)
x <- calc_streak(kobe$basket)
y <- calc_streak(sim_basket)
length(y)
length(x)
y <- y + c(0,0,0,1)
y
length(y)
y <- calc_streak(sim_basket)
y <- y
barplot(table(sim_streaks))
barplot(table(kobe_streak))
barplot(table(sim_streaks))
barplot(table(kobe_streak))
barplot(table(sim_streaks))
barplot(table(sim_streaks))
barplot(table(kobe_streak))
str_extract_all(raw.data, "\\w+") #All words
raw.data <-"555-1239Moe Szyslak(636) 555-0113Burns, C. Montgomery555-6542Rev. Timothy Lovejoy555 8904Ned Flanders636-555-3226Simpson, Homer5553642Dr. Julius Hibbert"
str_extract_all(raw.data, "\\w+") #All words
#This script is used for testing Week3 607 assignments
library(stringr)
raw.data <-"555-1239Moe Szyslak(636) 555-0113Burns, C. Montgomery555-6542Rev. Timothy Lovejoy555 8904Ned Flanders636-555-3226Simpson, Homer5553642Dr. Julius Hibbert"
str_extract_all(raw.data, "^.*$") #All characters
str_extract_all(raw.data, "\\w+") #All words
unlist(str_extract_all(raw.data, "[[:alpha:]., ]{2,}")) #Extract names
str_extract_all(raw.data, "[[:alpha:]., ]{2,}") #Extract names
df <- data.frame(str_extract_all(raw.data, "[[:alpha:]., ]{2,}"))
df
View(df)
string(df)
View(df)
full_names <- df
full_names <- df[2]
df[,2]
?data.frame
df
df[1,]
df[,1]
df <- data.frame(str_extract_all(raw.data, "[[:alpha:]., ]{2,}"), stringsAsFactors = F)
df
df[,2]
df[,1]
str_replace("aaabbcd","bb","zz")
str_replace("aaabbcd","/*","zz")
str_replace("aaabbcd",".*","zz")
str_replace_all("aaabbcd",".*","zz")
str_replace_all("aaabbcd",".","zz")
str_replace_all("aaabbcd",".","z")
str_replace_all("aaabbcd",".*","z")
str_replace_all("aaabbcd",".","z")
x <- c('aaa','bbbb','cc')
str_replace_all(x,".","z")
str_replace_all(x,"a","z")
unlist(str_extract_all(raw.data, "[[:alpha:]., ]{2,}"))
y <- unlist(str_extract_all(raw.data, "[[:alpha:]., ]{2,}"))
typeof(y)
class(y)
y <- str_extract_all(raw.data, "[[:alpha:]., ]{2,}")
class(y)
typeof(y)
y
y
?str_replace_all
str_replace_all(y, "Rev.", "")
str_replace_all(y, "Rev.|Dr.", "")
y<-str_replace_all(y, "Rev.|Dr.", "")
y <- str_extract_all(raw.data, "[[:alpha:]., ]{2,}")
y1<-str_replace_all(y, "Rev.|Dr.", "")
y1
typeof(y1)
list(y1)
class(y1)
y1
y
y1
y1<-str_replace_all(y, "Rev.|Dr.|C.", "")
y1<-str_replace_all(y, "Rev.|Dr.|C.|,", "")
y1
as.list(strsplit(x=y1, split = "\t"))
as.list(strsplit(x=y1, split = "\"))
""
d
)
" )
?str_detect
y
type(y)
typeof(y)
str_extract_all()
str_extract_all(y, [a-zA-Z])
str_extract_all(y, "[a-zA-Z]")
str_extract_all(y, "[a-zA-Z]*")
str_extract_all(y, "[a-zA-Z]\S")
str_extract_all(y, "[a-zA-Z]\s*")
str_extract_all(y, "[a-zA-Z]\ss*")
str_extract_all(y, "[a-zA-Z]\\s*")
str_extract_all(y, "[a-zA-Z]\\S*")
y
str_extract_all(raw.data, "[[:alpha:]., ]{2,}")
x <- str_extract_all(raw.data, "[[:alpha:]., ]{2,}")
str_extract_all(x, [a-zA-Z]\\S*)
unlist(str_extract_all(raw.data, "[[:alpha:]., ]{2,}"))
names <- unlist(str_extract_all(raw.data, "[[:alpha:]., ]{2,}"))
names_1 <- str_replace_all(names, "Dr.|Rev.|C.", "")
names_1
names_1 <- str_replace_all(names, "Dr.|Rev.|C.|,", "")
names_1
str_split(names_1, "\\w")
str_split(names_1, "\\w*")
str_split(names_1, "\\w*")
str_extract_all(name, "\\W+,")
str_extract_all(names_1, "\\W+,")
z <- str_extract_all(names_1, "\\W+,")
z
View(z)
name = str_replace_all(name, pattern = "Rev. |Dr.", replacement = "")
View(name)
name = str_replace_all(name, pattern = "Rev. |Dr.", replacement = "")
name <- str_replace_all(name, pattern = "Rev. |Dr.", replacement = "")
name <- "555-1239Moe Szyslak(636) 555-0113Burns, C. Montgomery555 -6542Rev. Timothy Lovejoy555 8904Ned Flanders636-555-3226Simpson, Homer5553642Dr. Julius Hibbert"
name <- str_replace_all(name, pattern = "Rev. |Dr.", replacement = "")
name <- "555-1239Moe Szyslak(636) 555-0113Burns, C. Montgomery555 -6542Rev. Timothy Lovejoy555 8904Ned Flanders636-555-3226Simpson, Homer5553642Dr. Julius Hibbert"
name2 <- str_replace_all(name, pattern = "Rev. |Dr.", replacement = "")
name2
str_extract_all(name, "\\W+,")
str_extract_all(name2, "\\W+,")
unlist(str_extract_all(raw.data, "[[:alpha:]., ]{2,}"))
names <-unlist(str_extract_all(raw.data, "[[:alpha:]., ]{2,}"))
)
names <-unlist(str_extract_all(raw.data, "[[:alpha:]., ]{2,}")))
names <-unlist(str_extract_all(raw.data, "[[:alpha:]., ]{2,}"))
)
unlist(str_extract_all(raw.data, "[[:alpha:]., ]{2,}"))
names <- unlist(str_extract_all(raw.data, "[[:alpha:]., ]{2,}"))
names
str_extract_all(names, "Dr.|Rev.|C.|,", "")
str_extract_all(names, "Dr.|Rev.|C.|,", "")
str_replace_all(names, "Dr.|Rev.|C.|,", "")
str_names <- str_replace_all(names, "Dr.|Rev.|C.|,", "")
str_split(str_names, "\\w+")
str_split(str_names, "\\W+")
str_names_split <- str_split(str_names, "\\W+")
str_names_split
class(str_names_split)
names
str_names <- str_replace_all(names, "Dr.\\s+|Rev.\\s+|C.\\s+|,", "")
str_names
str_names_split <- str_split(str_names, "\\W+")
str_names_split
str_names_split[1]
str_split(str_names_split[1], "\\s+")
name1 <- str_split(str_names_split[1], "\\s+")
name1
typeof(name1)
class(name1)
name1 <- str_split(str_names_split, "\\s+")
name1
unlist(name1, recursive = FALSE)
str_names <- str_replace_all(names, "Dr.\\s+|Rev.\\s+|C.\\s+|,", "")
str_names
str_names <- str_replace_all(names, "Dr.\\s+|Rev.\\s+|C.\\s+|,|\", "")
""
str_names <- str_replace_all(names, "Dr.\\s+|Rev.\\s+|C.\\s+|,|\\", "")
str_names
typeof(str_names)
str_replace_all(str_names, "\"", "")
noquote(str_names)
str_names <- noquote(str_names)
str_names
name1 <- str_split(str_names_split, "\\s+")
name
name
name1
str_names <- str_replace_all(names, "Dr.\\s+|Rev.\\s+|C.\\s+|,|\\", "")
str_names <- str_replace_all(raw.data, "Dr.\\s+|Rev.\\s+|C.\\s+|,|\\", "")
str_names <- str_replace_all(raw.data, "Dr.\\s+|Rev.\\s+|C.\\s+|,", "")
str_names
str_names <- noquote(str_names)
str_names_split <- str_split(str_names, "\\W+")
str_names_split <- str_split(str_names, "\\W+")
name1 <- str_split(str_names_split, "\\s+")
name1
unlist(str_extract_all(raw.data, "[[:alpha:]., ]{2,}"))
names <- unlist(str_extract_all(raw.data, "[[:alpha:]., ]{2,}"))
names <- unlist(str_extract_all(raw.data, "[[:alpha:]., ]{2,}"))
str_names <- str_replace_all(names, "Dr.\\s+|Rev.\\s+|C.\\s+|,", "")
str_names <- noquote(str_names)
str_names_split <- str_split(str_names, "\\W+")
name1 <- str_split(str_names_split, "\\s+")
name1
str_names
str_names_split
str_names_split[1]
unlist(name1, recursive = FALSE)
names <- unlist(str_extract_all(raw.data, "[[:alpha:]., ]{2,}"))
str_names <- str_replace_all(names, "Dr.\\s+|Rev.\\s+|C.\\s+|,", "")
str_names <- noquote(str_names)
str_names_split <- str_split(str_names, "\\W+")
name1 <- str_split(str_names_split, "\\s+")
unlist(name1, recursive = FALSE)
name1
unlist(name1[1], recursive = FALSE)
for (full_name in name1) { print(full_name)}
first_names_vector <- c()
for (full_name in name1) { first_names_vector <- c(first_names_vector, str_split(full_name, "\\s+"))}
first_names_vector
for (full_name in name1) { first_names_vector <- c(first_names_vector, str_split(full_name, "\\s+")[1])}
first_names_vector
first_names_vector <- c()
for (full_name in name1) { first_names_vector <- c(first_names_vector, str_split(full_name, "\\s+")[1])}
first_names_vector
first_names_vector <- c()
for (full_name in name1) { first_names_vector <- c(first_names_vector, str_split(full_name, "\\s+")[1])}
first_names_vector
first_names_vector
first_names_vector[1]
for (full_name in name1) { first_names_vector <- c(first_names_vector, unquote(str_split(full_name, "\\s+")[1]))}
noquote(str_split(full_name, "\\s+")[1]))
noquote(str_split(full_name, "\\s+")[1])
first_names_vector <- c("hello")
first_names_vector
full_name
str_extract(full_name, "[a-zA-Z]*")
full_name
typeof(full_name)
noquote(full_name)
noquote(full_name)full_name
full_name <- noquote(full_name)
full_name
typeof(full_name)
name1
str_names_split
unlist(str_names_split, recursive = FALSE)
str_names_split
str_names_split[1]
for (full_name in str_names_split) { first_names_vector <- c(first_names_vector, full_name[1] )}
first_names_vector
last_names_vector <- c()
first_names_vector <- c()
for (full_name in str_names_split) { first_names_vector <- c(first_names_vector, full_name[1]
last_names_vector <- c(first_names_vector, full_name[2]
)}
for (full_name in str_names_split) { first_names_vector <- c(first_names_vector, full_name[1]
last_names_vector <- c(first_names_vector, full_name[2]
)}
for (full_name in str_names_split) { first_names_vector <- c(first_names_vector, full_name[1]                                   last_names_vector <- c(first_names_vector, full_name[2]          )}
for (full_name in str_names_split) { first_names_vector <- c(first_names_vector, full_name[1]  last_names_vector <- c(first_names_vector, full_name[2]          )}
raw.data <-"555-1239Moe Szyslak(636) 555-0113Burns, C. Montgomery555-6542Rev. Timothy Lovejoy555 8904Ned Flanders636-555-3226Simpson, Homer5553642Dr. Julius Hibbert"
names <- unlist(str_extract_all(raw.data, "[[:alpha:]., ]{2,}"))
str_names <- str_replace_all(names, "Dr.\\s+|Rev.\\s+|C.\\s+|,", "")
str_names_split <- str_split(noquote(str_names), "\\W+")
#name1 <- str_split(str_names_split, "\\s+")
#unlist(name1[1], recursive = FALSE)
first_names_vector <- c()
for (full_name in str_names_split) {
first_names_vector <- c(first_names_vector, full_name[1])
last_names_vector <- c(first_names_vector, full_name[2])
}
last_names_vector
firstlast_names_vector
raw.data <-"555-1239Moe Szyslak(636) 555-0113Burns, C. Montgomery555-6542Rev. Timothy Lovejoy555 8904Ned Flanders636-555-3226Simpson, Homer5553642Dr. Julius Hibbert"
names <- unlist(str_extract_all(raw.data, "[[:alpha:]., ]{2,}"))
str_names <- str_replace_all(names, "Dr.\\s+|Rev.\\s+|C.\\s+|,", "")
str_names_split <- str_split(noquote(str_names), "\\W+")
#name1 <- str_split(str_names_split, "\\s+")
#unlist(name1[1], recursive = FALSE)
first_names_vector <- c()
last_names_vector <- c()
for (full_name in str_names_split) {
first_names_vector <- c(first_names_vector, full_name[1])
last_names_vector <- c(first_names_vector, full_name[2])
}
last_names_vector
first_names_vector <- c()
last_names_vector <- c()
for (full_name in str_names_split) {
first_names_vector <- c(first_names_vector, full_name[1])
last_names_vector <- c(last_names_vector, full_name[2])
}
str_names_titles <- str_replace_all(names, "C.\\s+|,", "")
str_names_titles
class(str_names_titles)
typeof(str_names_titles)
str_split(str_names_titles, )
str_names_titles
str_split(str_names_titles, '\\"')
unlist(str_split(str_names_titles, '\\"'), recursive = F)
str_split(str_names_titles, '\\"')
is_naming_havingTitle <-- str_names_titles
str_names_titles <- str_split(str_names_titles, '\\"')
for(full_title_name in str_names_titles) {
logical_vector_title <- c(logical_vector_title, str_detect(full_title_name, "Dr.|Rev."))
}
is_naming_havingTitle <-- str_names_titles
str_names_titles <- str_replace_all(names, "C.\\s+|,", "")
str_split(str_names_titles, '\\"')
logical_vector_title <- c()
is_naming_havingTitle <-- str_names_titles
is_naming_havingTitle <- str_names_titles
str_names_titles <- str_split(str_names_titles, '\\"')
for(full_title_name in str_names_titles) {
logical_vector_title <- c(logical_vector_title, str_detect(full_title_name, "Dr.|Rev."))
}
logical_vector_title
str_names_titles
str_names_titles <- str_replace_all(names, "C.\\s+|,", "")
names
str_names_titles <- str_replace_all(names, "C.\\s+|,", "")
str_names_titles
names <- unlist(str_extract_all(raw.data, "[[:alpha:]., ]{2,}"))
names
names <- unlist(str_extract_all(raw.data, "[[:alpha:]., ]{2,}"))
str_names_titles <- str_replace_all(names, "C.\\s+|,", "")
str_names_titles
str_names_middle <- str_replace_all(names, ",", "")
str_names_middle
knitr::opts_chunk$set(echo = TRUE)
str_names_second <- str_replace_all(names, "Dr.|Rev.|,", "")
str_names_second <- str_replace_all(names, "Dr.|Rev.|,", "")
logical_vector_secondName<- c()
str_names_second <- str_split(str_names_second, '\\"')
for(full_title_name in str_names_second) {
logical_vector_secondName <- c(logical_vector_secondName, str_detect(full_title_name, "Dr.|Rev."))
}
logical_vector_secondName
str_names_second <- str_replace_all(names, "Dr.|Rev.|,", "")
logical_vector_secondName<- c()
str_names_second <- str_split(str_names_second, '\\"')
for(full_title_name in str_names_second) {
logical_vector_secondName <- c(logical_vector_secondName, str_detect(full_title_name, "."))
}
logical_vector_secondName
str_names_second <- str_replace_all(names, "Dr.|Rev.|,", "")
logical_vector_secondName<- c()
str_names_second <- str_split(str_names_second, '\\"')
for(full_title_name in str_names_second) {
logical_vector_secondName <- c(logical_vector_secondName, str_detect(full_title_name, "\\."))
}
logical_vector_secondName
sample_string <- "220$ is the price of this jacket"
str_extract_all(sample_string, "[0-9]+\\$")
sample_string <- "220$ is the price of this jacket called super$12"
str_extract_all(sample_string, "[0-9]+\\$")
str_extract_all(sample_string, "\\b[a-z]{1,4}\\b")
sample_string <- "220$ is the price of this jacket bought on date 10/12/2018"
str_extract_all(sample_string, "\\b[a-z]{1,4}\\b")
sample_string <- "220$ is the price of this jacket bought on date 10/12/2018"
str_extract_all(sample_string, " \\d{2}/\\d{2}/\\d{4}")
sample_string <- "In the text having <sometag>value</sometag>"
str_extract_all(sample_string, "<(.+?)>.+?</\\1>")
sample_string <- "This text having <sometag>value</sometag> is a sample xml tag"
str_extract_all(sample_string, "<(.+?)>.+?</\\1>")
sample_string <- "The filename is sales.txt and has sales details"
str_extract_all(sample_string, ".*?\\.txt$")
sample_string <- "The filename is sales.txt"
str_extract_all(sample_string, ".*?\\.txt$")
sample_text_names <- c('filename', 'file.txt', 'file.xml')
str_extract_all(sample_text_names, ".*?\\.txt$")
encrypted <- "clcopCow1zmstc0d87wnkig7OvdicpNuggvhryn92Gjuwczi8hqrfpRxs5Aj5dwpn0TanwoUwisdij7Lj8kpf03AT5Idr3coc0bt7yczjatOaootj55t3Nj3ne6c4Sfek.r1w1YwwojigOd6vrfUrbz2.2bkAnbhzgv4R9i05zEcrop.wAgnb.SqoU65fPa1otfb7wEm24k6t3sR9zqe5fy89n6Nd5t9kc4fE905gmc4Rgxo5nhDk!gr"
unencrypted <- unlist(str_extract_all(encrypted, "[:upper:]"))
unencrypted
encrypted <- "clcopCow1zmstc0d87wnkig7OvdicpNuggvhryn92Gjuwczi8hqrfpRxs5Aj5dwpn0TanwoUwisdij7Lj8kpf03AT5Idr3coc0bt7yczjatOaootj55t3Nj3ne6c4Sfek.r1w1YwwojigOd6vrfUrbz2.2bkAnbhzgv4R9i05zEcrop.wAgnb.SqoU65fPa1otfb7wEm24k6t3sR9zqe5fy89n6Nd5t9kc4fE905gmc4Rgxo5nhDk!gr"
unencrypted <- unlist(str_extract_all(encrypted, "[:lower:]"))
unencrypted
encrypted <- "clcopCow1zmstc0d87wnkig7OvdicpNuggvhryn92Gjuwczi8hqrfpRxs5Aj5dwpn0TanwoUwisdij7Lj8kpf03AT5Idr3coc0bt7yczjatOaootj55t3Nj3ne6c4Sfek.r1w1YwwojigOd6vrfUrbz2.2bkAnbhzgv4R9i05zEcrop.wAgnb.SqoU65fPa1otfb7wEm24k6t3sR9zqe5fy89n6Nd5t9kc4fE905gmc4Rgxo5nhDk!gr"
unlist(str_extract_all(encrypted, "[:upper:]"))
unlist(str_extract_all(encrypted, "[:lower:]"))
unlist(str_extract_all(encrypted, "[:digit:]"))
unlist(str_extract_all(encrypted, "[:alnum:]"))
unlist(str_extract_all(encrypted, "[:punct:]"))
unlist(str_extract_all(encrypted, "[:graph:]"))
unlist(str_extract_all(encrypted, "[:blank:]"))
unlist(str_extract_all(encrypted, "[:space:]"))
unlist(str_extract_all(encrypted, "[:print:]"))
unlist(str_extract_all(encrypted, "[:upper:]"))
str_names_list <- str_split(noquote(str_names_only), "\\W+")
str_names_only <- str_replace_all(names, "Dr.\\s+|Rev.\\s+|C.\\s+|,", "")
str_names_list <- str_split(noquote(str_names_only), "\\W+")
str_names_list
str_names_list
noquote(str_names_list)
