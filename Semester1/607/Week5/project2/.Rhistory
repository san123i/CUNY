?gather
library(tidyr)
?gather
gather("cases", "year","n",2:4)
gather(cases, "year","n",2:4)
gather(cases, "year","n",1:4)
gather(cases, "year","n",2:4)
cases
pollution
spread(pollution, size, amount)
gather(cases, year,n,2:4)
cases
library(dplur)
library(dplyr)
library(nycflights13)
install.packages("nycflights13")
library(nycflights13)
?airlines
?normalplot
??normalplot
install.packages("DATA606")
devtools::install_github("jbryer/DATA606")
devtools::install_github("jbryer/DATA606")
library(DATA606)
devtools::install_github("jbryer/DATA606")
library(DATA606)
??rlang
install.packages("rlang")
devtools::install_github("jbryer/DATA606")
library(DATA606)
normalPlot(mean=0,sd = 1, bounds = c(10,20))
normalPlot(mean=0,sd = 1, bounds = c(1,2))
normalPlot(mean=0,sd = 1, bounds = c(-1.2,))
normalPlot(mean=0,sd = 1, bounds = c(0,-1.2))
normalPlot(mean=0,sd = 1, bounds = c(0,-1))
normalPlot(mean=0,sd = 1, bounds = c(0,-1))
normalPlot(mean=0,sd = 1, bounds = c(1,-1))
normalPlot(mean=0,sd = 1, bounds = c(1,2))
normalPlot(mean=0,sd = 1, bounds = c(0,2))
normalPlot(mean=0,sd = 1, bounds = c(-1,2))
normalPlot(mean=0,sd = 1, bounds = c(-1,0))
normalPlot(mean=0,sd = 1, bounds = c(-1,))
normalPlot(mean=0,sd = 1, bounds = c(-1,10))
normalPlot(mean=0,sd = 1, bounds = c(-1,4))
normalPlot(mean=0,sd = 1, bounds = c(-1.2,4))
normalPlot(mean=0,sd = 1, bounds = c(-1.2,5))
normalPlot(mean=0,sd = 1, bounds = c(-1.2,6))
normalPlot(mean=0,sd = 1, bounds = c(-1.2,3))
normalPlot(mean=0,sd = 1, bounds = c(-1.2,4))
normalPlot(mean=0,sd = 1, bounds = c(-1.3,4))
normalPlot(mean=0,sd = 1, bounds = c(-4,.18))
normalPlot(mean=0,sd = 1, bounds = c(8,10))
normalPlot(mean=0,sd = 1, bounds = c(-.5,.5))
normalPlot(heightMean, heightSD)
fullData <- read.csv(file = "C://CUNY//GIT//CUNY//Semester1//607//Week4//data.csv", header = F, sep = ",")
fullData
fullData <- read.csv(file = "C://CUNY//GIT//CUNY//Semester1//607//Week4//data.csv", header = F, sep = ",")
fullData
fullData <- read.csv(file = "C://CUNY//GIT//CUNY//Semester1//607//Week4//data.csv", header = F, sep = ",")
fullData
fullData <- read.csv(file = "C://CUNY//GIT//CUNY//Semester1//607//Week4//data.csv", header = F, sep = ",")
fullData <- read.csv(file = "C://CUNY//GIT//CUNY//Semester1//607//Week4//data.csv", header = F, sep = ",")
fullData
fullData <- read.csv(file = "C://CUNY//GIT//CUNY//Semester1//607//Week4//data.csv", header = F, sep = ",")
fullData
library(tidyr)
library(dplyr)
?gather
fullData
gather(fullData, key = "City", "Delay", 3:7)
gather(fullData, key = "City", "Delay", 1:7)
gather(fullData, key = "City", "Delay", 3:7)
gather(fullData, key = "City", "Delay", 4:7)
fullDAta
fullData
fullData <- read.csv(file = "C://CUNY//GIT//CUNY//Semester1//607//Week4//data.csv", header = F, sep = ",")
fullData
fullData <- read.csv(file = "C://CUNY//GIT//CUNY//Semester1//607//Week4//data.csv", header = F, sep = ",", stringsAsFactors = FALSE, strip.white = T)
fullData
fullData[V1]
fullData[,V1]
fullData
gather(fullData, key = "City", value="Time")
fullData <- read.csv(file = "C://CUNY//GIT//CUNY//Semester1//607//Week4//data.csv", header = F, sep = ",", stringsAsFactors = FALSE, strip.white = T, header=T)
??read.csv
?read.csv
fullData <- read2.csv(file = "C://CUNY//GIT//CUNY//Semester1//607//Week4//data.csv", header = F, sep = ",", stringsAsFactors = FALSE, strip.white = T)
fullData <- read.csv2(file = "C://CUNY//GIT//CUNY//Semester1//607//Week4//data.csv", header = F, sep = ",", stringsAsFactors = FALSE, strip.white = T)
fullData
fullData <- read.csv2(file = "C://CUNY//GIT//CUNY//Semester1//607//Week4//data.csv", header = F, sep = ",", stringsAsFactors = FALSE, strip.white = T, header=F)
fullData <- read.csv2(file = "C://CUNY//GIT//CUNY//Semester1//607//Week4//data.csv", header = F, sep = ",", stringsAsFactors = FALSE, strip.white = T, header=F)
fullData <- read.csv2(file = "C://CUNY//GIT//CUNY//Semester1//607//Week4//data.csv", header = F, sep = ",", stringsAsFactors = FALSE, strip.white = T)
fullData
tbl_df(fullData)
tbl_fullData <- tbl_df(fullData)
tbl_fullData
gather(tbl_fullData, key="name")
gather(tbl_fullData, key="name", valu="time")
names(fullData) <- null
names(fullData) <- NULL
fullData
gather(fullData, key="name",value="time")
gather(fullData, key="name",value="time", 3:7)
fullData <- read.csv2(file = "C://CUNY//GIT//CUNY//Semester1//607//Week4//data.csv", header = F, sep = ",", stringsAsFactors = FALSE, strip.white = T)
fullData
fullData[,]
fullData[,V1]
fullData[,1]
fullData[,2]
fullData[1,1]
fullData[1,1] <- "Airline"
fullData
fullData <- read.csv2(file = "C://CUNY//GIT//CUNY//Semester1//607//Week4//data.csv", header = T, sep = ",", stringsAsFactors = FALSE, strip.white = T)
fullData
fullData[1,1]
gather(fullData, key="city","time", 3:7)
names(fullData)
names(fullData)[1]
names(fullData)[1] <- "Airline"
names(fullData)[1]
gather(fullData, key="city","time", 3:7)
fullData <- read.csv2(file = "C://CUNY//GIT//CUNY//Semester1//607//Week4//data.csv", header = T, sep = ",", stringsAsFactors = FALSE, strip.white = T)
fullData
names(fullData)[1]
names(fullData)[1] <- "Airline"
names(fullData)[2] <- "Status"
fullData
?read.csv
fullData <- read.csv2(file = "C://CUNY//GIT//CUNY//Semester1//607//Week4//data.csv", header = T, sep = ",", stringsAsFactors = FALSE, strip.white = T, skipNul = T)
fullData
fullData <- read.csv2(file = "C://CUNY//GIT//CUNY//Semester1//607//Week4//data.csv", header = T, sep = ",", stringsAsFactors = FALSE, strip.white = T, blank.lines.skip = T)
fullData
?apply
fullData <- read.csv2(file = "C://CUNY//GIT//CUNY//Semester1//607//Week4//data.csv", header = T, sep = ",", stringsAsFactors = FALSE, blank.lines.skip = TRUE)
read.csv2(file = "C://CUNY//GIT//CUNY//Semester1//607//Week4//data.csv", header = T, sep = ",", stringsAsFactors = FALSE, blank.lines.skip = TRUE)
read.csv2(file = "C://CUNY//GIT//CUNY//Semester1//607//Week4//data.csv", header = T, sep = ",", stringsAsFactors = FALSE, na.strings = c("NA"))
read.csv2(file = "C://CUNY//GIT//CUNY//Semester1//607//Week4//data.csv", header = T, sep = ",", stringsAsFactors = FALSE, na.strings = c("",NA"))
""
read.csv2(file = "C://CUNY//GIT//CUNY//Semester1//607//Week4//data.csv", header = T, sep = ",", stringsAsFactors = FALSE, na.strings = c("","NA"))
fullData <- read.csv2(file = "C://CUNY//GIT//CUNY//Semester1//607//Week4//data.csv", header = T, sep = ",", stringsAsFactors = FALSE, na.strings = c("","NA"))
read.csv2(file = "C://CUNY//GIT//CUNY//Semester1//607//Week4//data.csv", header = T, sep = ",", stringsAsFactors = FALSE, na.strings = c("",""), blank.lines.skip = TRUE)
read.csv2(file = "C://CUNY//GIT//CUNY//Semester1//607//Week4//data.csv", header = T, sep = ",",  na.strings = c("",""), blank.lines.skip = TRUE)
read.csv2(file = "C://CUNY//GIT//CUNY//Semester1//607//Week4//data.csv", header = T, sep = ",", blank.lines.skip = TRUE)
read.csv2(file = "C://CUNY//GIT//CUNY//Semester1//607//Week4//data.csv", header = T, sep = ",",  na.strings = c("","NA"), blank.lines.skip = TRUE)
fullData <- read.csv2(file = "C://CUNY//GIT//CUNY//Semester1//607//Week4//data.csv", header = T, sep = ",",  na.strings = c("","NA"), blank.lines.skip = TRUE)
apply(fullData,2,max,na.rm=TRUE)
fullData <- read.csv2(file = "C://CUNY//GIT//CUNY//Semester1//607//Week4//data.csv", header = T, sep = ",",  na.strings = c("","NA"), blank.lines.skip = TRUE)
fullData <- na.omit(fullData)
fullData
read.csv2(file = "C://CUNY//GIT//CUNY//Semester1//607//Week4//data.csv", header = T, sep = ",",  na.strings = c("","NA"), blank.lines.skip = TRUE)
fullData <- read.csv2(file = "C://CUNY//GIT//CUNY//Semester1//607//Week4//data.csv", header = T, sep = ",",  na.strings = c("","NA"), blank.lines.skip = TRUE)
fullData[2,]
fullData[3,]
fullData[3,] <- NULL
fullData <- fullData[-3,]
fullData
fullData[1,1]
names(fullData)
names(fullData)[1] <- 'Airline'
names(fullData)[2] <- 'Status'
fullData
fullData <- read.csv2(file = "C://CUNY//GIT//CUNY//Semester1//607//Week4//data.csv", header = T, sep = ",",  na.strings = c("","NA"), blank.lines.skip = TRUE)
fullData
names(fullData)[1] <- 'Airline'
fullData
gather(fullData, key="City", value="Delay_minutes", 3:7)
fullData_Long <- gather(fullData, key="City", value="Delay_minutes", 3:7)
fullData_Long
fullData_Long <- gather(fullData, key="City", value="TravelTime", 3:7)
fullData_Long
fullData_Long <- gather(fullData, key="City", value="Time", 3:7)
fullData_Long <- gather(fullData, key="City", value="FlightCount", 3:7)
fullData_Long <- gather(fullData, key="City", value="Time", 3:7)
fullData_Long <- gather(fullData, key="City", value="FlightCount", 3:7)
fullData_Long
?flights
?flight
?tidyr
?dplyr
fullData_Long %>% group_by(Airline, FlightCount)
fullData_Long %>% filter(Status == "on time") %>% group_by(Airline, FlightCount)
ontime_dataset <- fullData_Long %>% filter(Status == "on time") %>% group_by(Airline, FlightCount)
delayed_dataset <- fullData_Long %>% filter(Status == "delayed") %>% group_by(Airline, FlightCount)
ontime_dataset
delayed_dataset
fullData_Long
fullData
?tidyr
?summarise
?summarize
library(tidyr)
library(dplyr)
?dplyr::summarise
knitr::opts_chunk$set(echo = TRUE)
#install.packages("tidyr", repos = "http://cran.us.r-project.org" )
#install.packages("dplyr", repos = "http://cran.us.r-project.org")
#install.packages("dplyr", repos = "http://cran.us.r-project.org")
#devtools::install_github("hadley/tidyr")
library(tidyr)
library(dplyr)
library(ggplot2)
ontime_dataset
ggplot(data = ontime_dataset, aes(x=FlightCount)) + geom_bar()
ggplot(data = ontime_dataset, aes(x=Airline, y=FlightCount)) + geom_bar()
ggplot(data = ontime_dataset, aes(x=Airline)) + geom_bar()
ggplot(data = ontime_dataset, aes(x=Airline, fill=FlightCount)) + geom_bar()
ggplot(data = ontime_dataset, aes(x=Airline, fill=FlightCount)) + geom_bar()
ggplot(ontime_dataset$City=='Los.Angeles', aes(x=Airline fill=FlightCount)) + geom_bar()
ggplot(ontime_dataset$City=='Los.Angeles', aes(x=Airline, fill=FlightCount)) + geom_bar()
ggplot(filter(ontime_dataset,City=='Los.Angeles'), aes(x=Airline, fill=FlightCount)) + geom_bar()
ggplot(filter(ontime_dataset,City=='Los.Angeles'), aes(x=Airline)) + geom_bar()
ggplot(data = ontime_dataset, aes(x=City, fill=FlightCount)) + geom_bar()
fullData_long
fullData_Long
summarise(fullData_Long)
?summarize
summarise(fullData_Long, max(FlightCount))
group_by(fullData_Long, Airline)
group_by(fullData_Long, Airline, City
)
group_by(fullData_Long, Airline, City)
long_ds <- fullData_Long[,-2]
long_ds
group_by(long_ds, City, FlightCount)
fullData %>% select(Airline, City, FlightCount) %>% group_by(Airline, City) %>% summarize(totalcount=sum(FlightCount))
fullData
fullData_Long
fullData_Long %>% select(Airline, City, FlightCount) %>% group_by(Airline, City) %>% summarize(totalcount=sum(FlightCount))
mutate?
?
l
;
?mutate
fullData_Long
fullData_Long %>% select(Airline, City, FlightCount) %>% group_by(Airline, City) %>% summarize(totalcount=sum(FlightCount))
fullData_Long %>% select(Airline, City, FlightCount) %>% group_by(Airline, City) %>% summarize(totalcount=sum(FlightCount)) %>% select(totalcount)
fullData_Long %>% select(Airline, City, FlightCount) %>% group_by(Airline, City) %>% summarize(totalcount=sum(FlightCount))
airline_city_total <- fullData_Long %>% select(Airline, City, FlightCount) %>% group_by(Airline, City) %>% summarize(totalcount=sum(FlightCount))
airline_city_total
fullData_Long
?join
left_join(fullData_Long, airline_city_total, by=c("Airline","City"))
fullData_long_totalcount <- left_join(fullData_Long, airline_city_total, by=c("Airline","City"))
group_by(fullData_long_totalcount, Airline, City)
fullData_long_totalcount %>% select(Airline, City, FlightCount, TotalCount) %>% mutate(ratio=FlightCount/TotalCount)
fullData_long_totalcount %>% select(Airline, City, FlightCount, TotalCount) %>% mutate(ratio=FlightCount/totalcount)
fullData_long_totalcount %>% select(Airline, City, FlightCount, totalcount) %>% mutate(ratio=FlightCount/totalcount)
fullData_long_totalcount
fullData_long_totalcount %>% select(Airline, Status, City, FlightCount, totalcount) %>% mutate(ratio=FlightCount/totalcount)
fullData_long_totalcount %>% select(Airline, Status, City, FlightCount, totalcount) %>% mutate(ratio=FlightCount/totalcount) %>% filter(Status=='on time') %>% group_by(City, Airline)
city_airline_ontimeRatio <- fullData_long_totalcount %>% select(Airline, Status, City, FlightCount, totalcount) %>% mutate(ratio=FlightCount/totalcount) %>% filter(Status=='on time') %>% group_by(City, Airline) %>% select(City, Airline, ratio)
city_airline_ontimeRatio
city_airline_ontimeRatio <- fullData_long_totalcount %>% select(Airline, Status, City, FlightCount, totalcount) %>% mutate(ratio=FlightCount/totalcount) %>% filter(Status=='on time') %>% group_by(City, Airline) %>% select(City, Airline, ratio as 'OntimeRatio')
city_airline_ontimeRatio
mutate(city_airline_ontimeRatio, ontime_ratio=ratio)
mutate(city_airline_ontimeRatio, ontime_ratio=ratio, delay_ratio=1-ratio)
mutate(city_airline_ontimeRatio, ontime_ratio=ratio, delay_ratio=1-ratio) %>% select(City, Airline, ontime_ratio, delay_ratio)
mutate(city_airline_ontimeRatio, ontime_ratio=ratio, delay_ratio=1-ratio) %>% select(City, Airline, ontime_ratio, delay_ratio) %>% group_by((City, Airline))
mutate(city_airline_ontimeRatio, ontime_ratio=ratio, delay_ratio=1-ratio) %>% select(City, Airline, ontime_ratio, delay_ratio) %>% group_by(City, Airline))
mutate(city_airline_ontimeRatio, ontime_ratio=ratio, delay_ratio=1-ratio) %>% select(City, Airline, ontime_ratio, delay_ratio) %>% group_by(City, Airline)
y <- mutate(city_airline_ontimeRatio, ontime_ratio=ratio, delay_ratio=1-ratio) %>% select(City, Airline, ontime_ratio, delay_ratio) %>% group_by(City, Airline)
y
spread(y, key = City)
spread(y, key = City, value = Airline)
gather(y, Key=City, value = Airline)
gather(y, Key=City, value = Airline, 3:$)
gather(y, Key=City, value = Airline, 3:4)
y
gather(y, key="City",val)
gather(y, key="City",valye="time",2:4)
gather(y, key="City",value="time",2:4)
gather(y, key="City",value="time",3:4)
mutate(city_airline_ontimeRatio, ontime_ratio=ratio, delay_ratio=1-ratio) %>% select(City, Airline, ontime_ratio, delay_ratio)
?inner_join
y
y
?group_by_prepare
?group_by_if
?spread
spread(data = y)
spread(data = y, fill = x)
spread(y, key="Airline",value="City")
gather(y, key="City", value="Airline",3:4)
gather(y, key="City", value="Airline",2:4)
gather(y, key="City", value="Airline2",2:4)
gather(y, key="City", value="Airline2",3:4)
y
y1 <- select(y, City, Airline, ontime_ratio)
y1
spread(y1, Airline, ontime_ratio)
table(y1)
barplot(y1)
?barplot
y1
y2 <- spread(y1, Airline, ontime_ratio)
y2
ggplot(y2, aes(x=City)) + geom_bar
ggplot(y2, aes(x=City)) + geom_bar()
ggplot(y2, aes(x=City, y = ALASKA)) + geom_bar()
names(y2)
names(y2)[3] <- "AM WEST"
y2
ggplot(y2, aes=(x=City, y=c(ALASKA, 'AM WEST'))) + geom_bar(stat='Identity', aes(fill=City))
ggplot(y2, aes=(x=City) + geom_bar(stat='Identity', aes(fill=City))
;
''
names(y2)[3] <- "AM-WEST"
y2
barplot(height=City)
barplot(height=y2$City)
barplot(height=y2$ALASKA)
df = melt(data.frame(A=c(2, 10), B=c(3, 20),
experiment=c("X", "X & Y")),
variable_name="metric")
library(ggplot2)
?melt
ggplot(y2, aes(City)) + geom_bar
ggplot(y2, aes(City)) + geom_bar()
ggplot(y2, aes(City, ALASKA)) + geom_bar()
ggplot(y2, aes(x=City, y=ALASKA)) + geom_bar()
ggplot(y2, aes(x=City)) + geom_bar(mapping = ALASKA)
ggplot(y2, aes(x=City)) + geom_bar(mapping = y2$ALASKA)
?diamonds
head(diamonds)
y2
y2 <- spread(y1, Airline, ontime_ratio)
ggplot(data = y2) + geom_bar(mapping = aes(x=City))
y1
ggplot(y1, aes(x=City, y = ontime_ratio)) + geom_bar()
ggplot(y1, aes(x=City, y = ontime_ratio)) + geom_bar(stat="identity")
ggplot(y1, aes(x=City, y = ontime_ratio, fill=Airline)) + geom_bar(stat="identity")
ggplot(y1, aes(x=City, y = ontime_ratio, fill=Airline)) + geom_bar(stat="identity", position = position_dodge())
fullData_long_totalcount
ggplot(fullData_long_totalcount, aes(x=City, y = FlightCount, fill=Airline)) + geom_bar(stat="identity", position = position_dodge())
read.csv2(file = "https://raw.githubusercontent.com/san123i/CUNY/master/Semester1/607/Week5/data.csv", header = T, sep = ",",  na.strings = c("","NA"), blank.lines.skip = TRUE, stringsAsFactors = F)
?amsMath
??amsmath
?MiKTeX
install.packages("MiKTeX")
library(MiKTeX)
install.packages("MiKTeX")
install.packages("MiKTeX")
install.MikTeX(page_with_download_url = "http://miktex.org/download")
install.URL(page_with_download_url = "http://miktex.org/download")
install.packages("knitr")
install.packages("markdown")
setwd("C//CUNY//GIT//CUNY//Semester1//606//Week3//sample")
.51*.51*.49 + .51*.49*.51 + .49*.51*.51
setwd("C://CUNY//GIT//CUNY//Semester1//606//week4")
DATA606::startLab('Lab4a')
DATA606::startLab('Lab4b')
setwd("C://CUNY//GIT//CUNY//Semester1//606//week4")
DATA606::startLab('Lab4a')
setwd("C://CUNY//GIT//CUNY//Semester1//607//Week5//project2")
read.csv("C://CUNY//GIT//CUNY//Semester1//607//Week5//project2//ethereum_modified_dataset")
read.csv("C://CUNY//GIT//CUNY//Semester1//607//Week5//project2//ethereum_modified_dataset.csv")
eth_dataSet <- read.csv("C://CUNY//GIT//CUNY//Semester1//607//Week5//project2//ethereum_modified_dataset", header = T, sep = ",", stringsAsFactors = F, strip.white = T)
eth_dataSet <- read.csv("C://CUNY//GIT//CUNY//Semester1//607//Week5//project2//ethereum_modified_dataset.csv", header = T, sep = ",", stringsAsFactors = F, strip.white = T)
head(eth_dataSet)
snp_data <- read.csv("C://CUNY//GIT//CUNY//Semester1//607//Week5//project2//SnP500-financials.csv", header = T, sep = ",", stringsAsFactors = F, strip.white = T)
snp_data
head(snp_data)
library(tidyr)
head(gather(data = snp_data, key = "Attributes", 3:12))
gather(data = snp_data, key = "Attributes", 3:12)
?gather
gather(data = snp_data, key = "Attributes", value="values",3:12)
snp_longdata <- gather(data = snp_data, key = "Attributes", value="values",3:12)
snp_longdata
str(snp_longdata)
snp_sectorData <- snp_longdata %>% filter(Attributes=="Sector")
snp_sectorData <- snp_longdata %>% filter(Attributes=="Sector")
filter(snp_longdata, Attributes == 'Sector')
snp_longdata <- gather(data = snp_data, key = "obj_attributes", value="values",3:12)
filter(snp_longdata, obj_attributes == 'Sector')
?filter
library(filter)
library(dplyr)
filter(snp_longdata, obj_attributes == 'Sector')
snp_longdata <- gather(data = snp_data, key = "Attribute", value="values",3:12)
snp_sales_earnings <- snp_longdata %>% select(-c(6,8,9,10))
snp_sales_earnings
head(snp_sales_earnings)
snp_longdata <- gather(data = snp_data, key = "Attribute", value="values",3:12)
snp_sector <- snp_longdata %>% filter(Attribute == 'Sector')
snp_sales_earnings <- snp_longdata %>% select(-c(6,8,9,10))
head(snp_sales_earnings)
?select
snp_sales_earnings <- snp_longdata %>% select(-"Dividend Yield", -"52 Week Low", -"52 Week High", -"Market Cap")
head(snp_longdata)
snp_sales_earnings <- snp_longdata %>% filter(Attributes %in% c("Dividend Yield", "52 Week Low", "52 Week High", "Market Cap"))
snp_sales_earnings <- snp_longdata %>% filter(Attributes %in% ("Dividend Yield", "52 Week Low", "52 Week High", "Market Cap"))
snp_sales_earnings <- snp_longdata %>% filter(Attribute %in% ("Dividend Yield", "52 Week Low", "52 Week High", "Market Cap"))
stock_attributes <- c("Dividend Yield", "52 Week Low", "52 Week High", "Market Cap")
snp_sales_earnings <- snp_longdata %>% filter(Attribute %in% stock_attributes)
)head(snp_sales_earnings
head(snp_sales_earnings)
filter(snp_longdata, Attribute == "Dividend Yield")
snp_longdata
tail(snp_longdata)
filter(snp_longdata, Attribute == "Dividend.Yield")
stock_attributes <- c("Dividend.Yield", "52.Week.Low", "52.Week.High", "Market.Cap")
snp_sales_earnings <- snp_longdata %>% filter(Attribute  !%in% stock_attributes)
snp_sales_earnings <- snp_longdata %>% filter(Attribute  %in% stock_attributes)
snp_sales_earnings
snp_sales_earnings <- snp_longdata %>% filter(!Attribute  %in% stock_attributes)
snp_sales_earnings
tail(snp_sales_earnings)
snp_sector_data <- snp_longdata %>% filter(Attribute == 'Sector')
snp_sales_earnings_data <- snp_longdata %>% filter(!Attribute  %in% stock_attributes)
snp_stock_data <- snp_longdata %>% filter(!Attribute  %in% stock_attributes)
ggplot(snp_sector_data, aes(x="Sector")) + geom_bar()
library(ggplot2)
ggplot(snp_sector_data, aes(x="Sector")) + geom_bar()
head(snp_sector_data)
ggplot(snp_sector_data, aes(x="values")) + geom_bar()
ggplot(snp_sector_data, aes(x="values")) + geom_bar(stat="identity")
names(snp_sector_data)
ggplot(snp_sector_data, aes(x=values)) + geom_bar(stat="identity")
ggplot(snp_sector_data, aes(x=values)) + geom_bar()
snp_sales_earnings_data
snp_data
head(snp_data)
mutate(snp_data, fluct_perc = 100*((52.Week.High - 52.Week.Low)/52.Week.Low))
mutate?
?
;
?mutate
mutate(snp_data, "fluct_perc" = 100 )
mutate(snp_data, "fluct_perc" = 100*((52.Week.High - 52.Week.Low)/52.Week.Low) )
names(snp_data)
mutate(snp_data, "fluct_perc" = 100*((X52.Week.High - X52.Week.Low)/X52.Week.Low) )
head(snp_data)
snp_data <- mutate(snp_data, "fluct_perc" = mod(100*((X52.Week.High - X52.Week.Low)/X52.Week.Low)) )
?mod
?ab s
?abs
snp_data <- mutate(snp_data, "fluct_perc" = abs(100*((X52.Week.High - X52.Week.Low)/X52.Week.Low)) )
head(snp_data)
?barplot
plot(x=snp_data$fluct_perc, y=snp_data$Sector)
filter(snp_data, fluct_perc>100)
arrange(snp_data, fluct_perc)
?arrange
arrange(snp_data, desc(fluct_perc)
)
?top_n
arrange(snp_data, desc(fluct_perc)) %>% top_n(100)
ggplot(arrange(snp_data, desc(fluct_perc)) %>% top_n(100), aes(x=Sector)) + geom_bar()
ggplot(arrange(snp_data, desc(fluct_perc)) %>% top_n(100), aes(x=Sector)) + geom_col()
ggplot(arrange(snp_data, desc(fluct_perc)) %>% top_n(100), aes(x=Sector, y=fluct_perc)) + geom_col()
ggplot(snp_sector_data, aes(x=values)) + geom_bar()
ggplot(arrange(snp_data, desc(fluct_perc)) %>% top_n(100), aes(x=Sector, y=fluct_perc)) + geom_col()
head(snp_data)
select(snp_data, Sector, Price.Earnings) %>% group_by(Sector) %>% summarise(mean(Price.Earnings))
select(snp_data, Sector, Price.Earnings) %>% group_by(Sector) %>% summarise(mean(Price.Earnings))
select(snp_data, Sector, Price.Earnings) %>% group_by(Sector) %>% summarise(mean(Price.Earnings, na.rm = T))
select(snp_data, Sector, Price.Earnings) %>% group_by(Sector) %>% summarise(meanPE = mean(Price.Earnings, na.rm = T))
select(snp_data, Sector, Price.Earnings) %>% group_by(Sector) %>% summarise(meanPE = mean(Price.Earnings, na.rm = T)) %> ggplot(aes(x=Sector, y=meanPE))) + geom_col()
select(snp_data, Sector, Price.Earnings) %>% group_by(Sector) %>% summarise(meanPE = mean(Price.Earnings, na.rm = T))
pe_data <- select(snp_data, Sector, Price.Earnings) %>% group_by(Sector) %>% summarise(meanPE = mean(Price.Earnings, na.rm = T))
ggplot(pe_data, aes(x=Sector, y=meanPE))) + geom_col()
ggplot(pe_data, aes(x=Sector, y=meanPE)) + geom_col()
filter(snp_data, Sector='Energy')
filter(snp_data, Sector=='Energy')
pe_data <- select(snp_data, Sector, Dividend.Yield) %>% group_by(Sector) %>% summarise(meanDividendYield = mean(Dividend.Yield, na.rm = T))
yield_data <- select(snp_data, Sector, Dividend.Yield) %>% group_by(Sector) %>% summarise(meanDividendYield = mean(Dividend.Yield, na.rm = T))
ggplot(yield_data, aes(x=Sector, y=Dividend.Yield)) + geom_col()
ggplot(yield_data, aes(x=Sector, y=meanDividendYield)) + geom_col()
premium_stocks <- select(snp_data, Sector, Price.Earnings) %>% group_by(Sector) %>% summarise(highestPEStock = max(Price.Earnings, na.rm = T))
premium_stocks
premium_stocks <- select(snp_data, Sector, Name, Price.Earnings) %>% group_by(Sector) %>% summarise(highestPEStock = max(Price.Earnings, na.rm = T))
premium_stocks
premium_stocks <- select(snp_data, Sector, Name, Price.Earnings) %>% group_by(Sector, NAme) %>% summarise(highestPEStock = max(Price.Earnings, na.rm = T))
premium_stocks <- select(snp_data, Sector, Name, Price.Earnings) %>% group_by(Sector, Name) %>% summarise(highestPEStock = max(Price.Earnings, na.rm = T))
premium_stocks
premium_stocks <- select(snp_data, Sector, Name, Price.Earnings) %>% group_by(Sector, Name) %>% filter(value=maxPrice.Earnings, na.rm = T)
premium_stocks <- select(snp_data, Sector, Name, Price.Earnings) %>% group_by(Sector, Name) %>% filter(value==maxPrice.Earnings, na.rm = T)
premium_stocks <- select(snp_data, Sector, Name, Price.Earnings) %>% group_by(Sector, Name) %>% filter(value==maxPrice.Earnings)
premium_stocks <- select(snp_data, Sector, Name, Price.Earnings) %>% group_by(Sector, Name) %>% filter(Price.Earnings==maxPrice.Earnings)
premium_stocks <- select(snp_data, Sector, Name, Price.Earnings) %>% group_by(Sector, Name) %>% filter(Price.Earnings==max(Price.Earnings))
premium_stocks
snp_data %>% filter(Sector=='Consumer Discretionary')
premium_stocks <- filter(snp_data, Sector=='Consumer Discretionary') %>% select( Sector, Name, Price.Earnings) %>% group_by(Sector, Name) %>% filter(Price.Earnings==max(Price.Earnings))
premium_stocks
premium_stocks <- filter(snp_data, Name=='Amazon.com Inc') %>% select( Sector, Name, Price.Earnings) %>% group_by(Sector, Name) %>% filter(Price.Earnings==max(Price.Earnings))
premium_stocks
premium_stocks[3]
premium_stocks <- filter(snp_data, Name=='Amazon.com Inc') %>% select( Sector, Name, Price.Earnings) %>% group_by(Sector, Name) %>% filter(Price.Earnings==max(Price.Earnings)) %>% arrange(Price.Earnings)
premium_stocks
premium_stocks <- select(snp_data, Sector, Name, Price.Earnings) %>% group_by(Sector, Name) %>% filter(Price.Earnings==max(Price.Earnings)) %>% arrange(Price.Earnings)
premium_stocks
premium_stocks <- select(snp_data, Sector, Name, Price.Earnings) %>% group_by(Sector, Name) %>% filter(Price.Earnings==max(Price.Earnings)) %>% arrange(desc(Price.Earnings)
)
premium_stocks
premium_stocks %>% print(n=1000)
select(snp_data, Sector, Name, Price.Earnings) %>% group_by(Sector, Name) %>% filter(Price.Earnings==max(Price.Earnings))
select(snp_data, Sector, Name, Price.Earnings) %>% group_by(Sector, Name) %>% summarise(Price.Earnings==max(Price.Earnings))
select(snp_data, Sector, Name, Price.Earnings) %>% group_by(Sector, Name) %>% summarise(Price.Earnings=max(Price.Earnings))
select(snp_data, Sector, Name, Price.Earnings) %>% group_by(Sector, Name)
select(snp_data, Sector, Name, Price.Earnings) %>% group_by(Sector, Name) %>% filter(Price.Earnings==max(Price.Earnings))
select(snp_data, Sector, Name, Price.Earnings) %>% filter(Price.Earnings==max(Price.Earnings))
select(snp_data, Sector, Name, Price.Earnings)
select(snp_data, Sector, Name, Price.Earnings) %>% filter(Price.Earnings == max(Price.Earnings))
select(snp_data, Sector, Name, Price.Earnings) %>% group_by(Sector, Name) %>% filter(Price.Earnings==max(Price.Earnings))
select(snp_data, Sector, Name, Price.Earnings) %>% group_by(Sector) %>% filter(Price.Earnings==max(Price.Earnings))
print(select(snp_data, Sector, Name, Price.Earnings) %>% group_by(Sector) %>% filter(Price.Earnings==max(Price.Earnings)), n=100)
?filter
select(snp_data, Sector, Name, Price.Earnings) %>% group_by(Sector) %>% filter(Price.Earnings==max(Price.Earnings, na.rm = T))
premium_stocks <- select(snp_data, Sector, Name, Price.Earnings) %>% group_by(Sector) %>% filter(Price.Earnings==max(Price.Earnings, na.rm = T))
ggplot(premium_stocks, aes(x=Name, y=Price.Earnings)) + geom_col()
ggplot(premium_stocks, aes(x=Name, y=Price.Earnings, fill=Sector)) + geom_col()
