gather(fullData, key = "City", "Delay", 3:7)
gather(fullData, key = "City", "Delay", 1:7)
gather(fullData, key = "City", "Delay", 3:7)
gather(fullData, key = "City", "Delay", 4:7)
fullDAta
fullData
fullData <- read.csv(file = "C://CUNY//GIT//CUNY//Semester1//607//Week4//data.csv", header = F, sep = ",")
fullData
fullData <- read.csv(file = "C://CUNY//GIT//CUNY//Semester1//607//Week4//data.csv", header = F, sep = ",", stringsAsFactors = FALSE, strip.white = T)
fullData
fullData[V1]
fullData[,V1]
fullData
gather(fullData, key = "City", value="Time")
fullData <- read.csv(file = "C://CUNY//GIT//CUNY//Semester1//607//Week4//data.csv", header = F, sep = ",", stringsAsFactors = FALSE, strip.white = T, header=T)
??read.csv
?read.csv
fullData <- read2.csv(file = "C://CUNY//GIT//CUNY//Semester1//607//Week4//data.csv", header = F, sep = ",", stringsAsFactors = FALSE, strip.white = T)
fullData <- read.csv2(file = "C://CUNY//GIT//CUNY//Semester1//607//Week4//data.csv", header = F, sep = ",", stringsAsFactors = FALSE, strip.white = T)
fullData
fullData <- read.csv2(file = "C://CUNY//GIT//CUNY//Semester1//607//Week4//data.csv", header = F, sep = ",", stringsAsFactors = FALSE, strip.white = T, header=F)
fullData <- read.csv2(file = "C://CUNY//GIT//CUNY//Semester1//607//Week4//data.csv", header = F, sep = ",", stringsAsFactors = FALSE, strip.white = T, header=F)
fullData <- read.csv2(file = "C://CUNY//GIT//CUNY//Semester1//607//Week4//data.csv", header = F, sep = ",", stringsAsFactors = FALSE, strip.white = T)
fullData
tbl_df(fullData)
tbl_fullData <- tbl_df(fullData)
tbl_fullData
gather(tbl_fullData, key="name")
gather(tbl_fullData, key="name", valu="time")
names(fullData) <- null
names(fullData) <- NULL
fullData
gather(fullData, key="name",value="time")
gather(fullData, key="name",value="time", 3:7)
fullData <- read.csv2(file = "C://CUNY//GIT//CUNY//Semester1//607//Week4//data.csv", header = F, sep = ",", stringsAsFactors = FALSE, strip.white = T)
fullData
fullData[,]
fullData[,V1]
fullData[,1]
fullData[,2]
fullData[1,1]
fullData[1,1] <- "Airline"
fullData
fullData <- read.csv2(file = "C://CUNY//GIT//CUNY//Semester1//607//Week4//data.csv", header = T, sep = ",", stringsAsFactors = FALSE, strip.white = T)
fullData
fullData[1,1]
gather(fullData, key="city","time", 3:7)
names(fullData)
names(fullData)[1]
names(fullData)[1] <- "Airline"
names(fullData)[1]
gather(fullData, key="city","time", 3:7)
fullData <- read.csv2(file = "C://CUNY//GIT//CUNY//Semester1//607//Week4//data.csv", header = T, sep = ",", stringsAsFactors = FALSE, strip.white = T)
fullData
names(fullData)[1]
names(fullData)[1] <- "Airline"
names(fullData)[2] <- "Status"
fullData
?read.csv
fullData <- read.csv2(file = "C://CUNY//GIT//CUNY//Semester1//607//Week4//data.csv", header = T, sep = ",", stringsAsFactors = FALSE, strip.white = T, skipNul = T)
fullData
fullData <- read.csv2(file = "C://CUNY//GIT//CUNY//Semester1//607//Week4//data.csv", header = T, sep = ",", stringsAsFactors = FALSE, strip.white = T, blank.lines.skip = T)
fullData
?apply
fullData <- read.csv2(file = "C://CUNY//GIT//CUNY//Semester1//607//Week4//data.csv", header = T, sep = ",", stringsAsFactors = FALSE, blank.lines.skip = TRUE)
read.csv2(file = "C://CUNY//GIT//CUNY//Semester1//607//Week4//data.csv", header = T, sep = ",", stringsAsFactors = FALSE, blank.lines.skip = TRUE)
read.csv2(file = "C://CUNY//GIT//CUNY//Semester1//607//Week4//data.csv", header = T, sep = ",", stringsAsFactors = FALSE, na.strings = c("NA"))
read.csv2(file = "C://CUNY//GIT//CUNY//Semester1//607//Week4//data.csv", header = T, sep = ",", stringsAsFactors = FALSE, na.strings = c("",NA"))
""
read.csv2(file = "C://CUNY//GIT//CUNY//Semester1//607//Week4//data.csv", header = T, sep = ",", stringsAsFactors = FALSE, na.strings = c("","NA"))
fullData <- read.csv2(file = "C://CUNY//GIT//CUNY//Semester1//607//Week4//data.csv", header = T, sep = ",", stringsAsFactors = FALSE, na.strings = c("","NA"))
read.csv2(file = "C://CUNY//GIT//CUNY//Semester1//607//Week4//data.csv", header = T, sep = ",", stringsAsFactors = FALSE, na.strings = c("",""), blank.lines.skip = TRUE)
read.csv2(file = "C://CUNY//GIT//CUNY//Semester1//607//Week4//data.csv", header = T, sep = ",",  na.strings = c("",""), blank.lines.skip = TRUE)
read.csv2(file = "C://CUNY//GIT//CUNY//Semester1//607//Week4//data.csv", header = T, sep = ",", blank.lines.skip = TRUE)
read.csv2(file = "C://CUNY//GIT//CUNY//Semester1//607//Week4//data.csv", header = T, sep = ",",  na.strings = c("","NA"), blank.lines.skip = TRUE)
fullData <- read.csv2(file = "C://CUNY//GIT//CUNY//Semester1//607//Week4//data.csv", header = T, sep = ",",  na.strings = c("","NA"), blank.lines.skip = TRUE)
apply(fullData,2,max,na.rm=TRUE)
fullData <- read.csv2(file = "C://CUNY//GIT//CUNY//Semester1//607//Week4//data.csv", header = T, sep = ",",  na.strings = c("","NA"), blank.lines.skip = TRUE)
fullData <- na.omit(fullData)
fullData
read.csv2(file = "C://CUNY//GIT//CUNY//Semester1//607//Week4//data.csv", header = T, sep = ",",  na.strings = c("","NA"), blank.lines.skip = TRUE)
fullData <- read.csv2(file = "C://CUNY//GIT//CUNY//Semester1//607//Week4//data.csv", header = T, sep = ",",  na.strings = c("","NA"), blank.lines.skip = TRUE)
fullData[2,]
fullData[3,]
fullData[3,] <- NULL
fullData <- fullData[-3,]
fullData
fullData[1,1]
names(fullData)
names(fullData)[1] <- 'Airline'
names(fullData)[2] <- 'Status'
fullData
fullData <- read.csv2(file = "C://CUNY//GIT//CUNY//Semester1//607//Week4//data.csv", header = T, sep = ",",  na.strings = c("","NA"), blank.lines.skip = TRUE)
fullData
names(fullData)[1] <- 'Airline'
fullData
gather(fullData, key="City", value="Delay_minutes", 3:7)
fullData_Long <- gather(fullData, key="City", value="Delay_minutes", 3:7)
fullData_Long
fullData_Long <- gather(fullData, key="City", value="TravelTime", 3:7)
fullData_Long
fullData_Long <- gather(fullData, key="City", value="Time", 3:7)
fullData_Long <- gather(fullData, key="City", value="FlightCount", 3:7)
fullData_Long <- gather(fullData, key="City", value="Time", 3:7)
fullData_Long <- gather(fullData, key="City", value="FlightCount", 3:7)
fullData_Long
?flights
?flight
?tidyr
?dplyr
fullData_Long %>% group_by(Airline, FlightCount)
fullData_Long %>% filter(Status == "on time") %>% group_by(Airline, FlightCount)
ontime_dataset <- fullData_Long %>% filter(Status == "on time") %>% group_by(Airline, FlightCount)
delayed_dataset <- fullData_Long %>% filter(Status == "delayed") %>% group_by(Airline, FlightCount)
ontime_dataset
delayed_dataset
fullData_Long
fullData
?tidyr
?summarise
?summarize
library(tidyr)
library(dplyr)
?dplyr::summarise
knitr::opts_chunk$set(echo = TRUE)
#install.packages("tidyr", repos = "http://cran.us.r-project.org" )
#install.packages("dplyr", repos = "http://cran.us.r-project.org")
#install.packages("dplyr", repos = "http://cran.us.r-project.org")
#devtools::install_github("hadley/tidyr")
library(tidyr)
library(dplyr)
library(ggplot2)
ontime_dataset
ggplot(data = ontime_dataset, aes(x=FlightCount)) + geom_bar()
ggplot(data = ontime_dataset, aes(x=Airline, y=FlightCount)) + geom_bar()
ggplot(data = ontime_dataset, aes(x=Airline)) + geom_bar()
ggplot(data = ontime_dataset, aes(x=Airline, fill=FlightCount)) + geom_bar()
ggplot(data = ontime_dataset, aes(x=Airline, fill=FlightCount)) + geom_bar()
ggplot(ontime_dataset$City=='Los.Angeles', aes(x=Airline fill=FlightCount)) + geom_bar()
ggplot(ontime_dataset$City=='Los.Angeles', aes(x=Airline, fill=FlightCount)) + geom_bar()
ggplot(filter(ontime_dataset,City=='Los.Angeles'), aes(x=Airline, fill=FlightCount)) + geom_bar()
ggplot(filter(ontime_dataset,City=='Los.Angeles'), aes(x=Airline)) + geom_bar()
ggplot(data = ontime_dataset, aes(x=City, fill=FlightCount)) + geom_bar()
fullData_long
fullData_Long
summarise(fullData_Long)
?summarize
summarise(fullData_Long, max(FlightCount))
group_by(fullData_Long, Airline)
group_by(fullData_Long, Airline, City
)
group_by(fullData_Long, Airline, City)
long_ds <- fullData_Long[,-2]
long_ds
group_by(long_ds, City, FlightCount)
fullData %>% select(Airline, City, FlightCount) %>% group_by(Airline, City) %>% summarize(totalcount=sum(FlightCount))
fullData
fullData_Long
fullData_Long %>% select(Airline, City, FlightCount) %>% group_by(Airline, City) %>% summarize(totalcount=sum(FlightCount))
mutate?
?
l
;
?mutate
fullData_Long
fullData_Long %>% select(Airline, City, FlightCount) %>% group_by(Airline, City) %>% summarize(totalcount=sum(FlightCount))
fullData_Long %>% select(Airline, City, FlightCount) %>% group_by(Airline, City) %>% summarize(totalcount=sum(FlightCount)) %>% select(totalcount)
fullData_Long %>% select(Airline, City, FlightCount) %>% group_by(Airline, City) %>% summarize(totalcount=sum(FlightCount))
airline_city_total <- fullData_Long %>% select(Airline, City, FlightCount) %>% group_by(Airline, City) %>% summarize(totalcount=sum(FlightCount))
airline_city_total
fullData_Long
?join
left_join(fullData_Long, airline_city_total, by=c("Airline","City"))
fullData_long_totalcount <- left_join(fullData_Long, airline_city_total, by=c("Airline","City"))
group_by(fullData_long_totalcount, Airline, City)
fullData_long_totalcount %>% select(Airline, City, FlightCount, TotalCount) %>% mutate(ratio=FlightCount/TotalCount)
fullData_long_totalcount %>% select(Airline, City, FlightCount, TotalCount) %>% mutate(ratio=FlightCount/totalcount)
fullData_long_totalcount %>% select(Airline, City, FlightCount, totalcount) %>% mutate(ratio=FlightCount/totalcount)
fullData_long_totalcount
fullData_long_totalcount %>% select(Airline, Status, City, FlightCount, totalcount) %>% mutate(ratio=FlightCount/totalcount)
fullData_long_totalcount %>% select(Airline, Status, City, FlightCount, totalcount) %>% mutate(ratio=FlightCount/totalcount) %>% filter(Status=='on time') %>% group_by(City, Airline)
city_airline_ontimeRatio <- fullData_long_totalcount %>% select(Airline, Status, City, FlightCount, totalcount) %>% mutate(ratio=FlightCount/totalcount) %>% filter(Status=='on time') %>% group_by(City, Airline) %>% select(City, Airline, ratio)
city_airline_ontimeRatio
city_airline_ontimeRatio <- fullData_long_totalcount %>% select(Airline, Status, City, FlightCount, totalcount) %>% mutate(ratio=FlightCount/totalcount) %>% filter(Status=='on time') %>% group_by(City, Airline) %>% select(City, Airline, ratio as 'OntimeRatio')
city_airline_ontimeRatio
mutate(city_airline_ontimeRatio, ontime_ratio=ratio)
mutate(city_airline_ontimeRatio, ontime_ratio=ratio, delay_ratio=1-ratio)
mutate(city_airline_ontimeRatio, ontime_ratio=ratio, delay_ratio=1-ratio) %>% select(City, Airline, ontime_ratio, delay_ratio)
mutate(city_airline_ontimeRatio, ontime_ratio=ratio, delay_ratio=1-ratio) %>% select(City, Airline, ontime_ratio, delay_ratio) %>% group_by((City, Airline))
mutate(city_airline_ontimeRatio, ontime_ratio=ratio, delay_ratio=1-ratio) %>% select(City, Airline, ontime_ratio, delay_ratio) %>% group_by(City, Airline))
mutate(city_airline_ontimeRatio, ontime_ratio=ratio, delay_ratio=1-ratio) %>% select(City, Airline, ontime_ratio, delay_ratio) %>% group_by(City, Airline)
y <- mutate(city_airline_ontimeRatio, ontime_ratio=ratio, delay_ratio=1-ratio) %>% select(City, Airline, ontime_ratio, delay_ratio) %>% group_by(City, Airline)
y
spread(y, key = City)
spread(y, key = City, value = Airline)
gather(y, Key=City, value = Airline)
gather(y, Key=City, value = Airline, 3:$)
gather(y, Key=City, value = Airline, 3:4)
y
gather(y, key="City",val)
gather(y, key="City",valye="time",2:4)
gather(y, key="City",value="time",2:4)
gather(y, key="City",value="time",3:4)
mutate(city_airline_ontimeRatio, ontime_ratio=ratio, delay_ratio=1-ratio) %>% select(City, Airline, ontime_ratio, delay_ratio)
?inner_join
y
y
?group_by_prepare
?group_by_if
?spread
spread(data = y)
spread(data = y, fill = x)
spread(y, key="Airline",value="City")
gather(y, key="City", value="Airline",3:4)
gather(y, key="City", value="Airline",2:4)
gather(y, key="City", value="Airline2",2:4)
gather(y, key="City", value="Airline2",3:4)
y
y1 <- select(y, City, Airline, ontime_ratio)
y1
spread(y1, Airline, ontime_ratio)
table(y1)
barplot(y1)
?barplot
y1
y2 <- spread(y1, Airline, ontime_ratio)
y2
ggplot(y2, aes(x=City)) + geom_bar
ggplot(y2, aes(x=City)) + geom_bar()
ggplot(y2, aes(x=City, y = ALASKA)) + geom_bar()
names(y2)
names(y2)[3] <- "AM WEST"
y2
ggplot(y2, aes=(x=City, y=c(ALASKA, 'AM WEST'))) + geom_bar(stat='Identity', aes(fill=City))
ggplot(y2, aes=(x=City) + geom_bar(stat='Identity', aes(fill=City))
;
''
names(y2)[3] <- "AM-WEST"
y2
barplot(height=City)
barplot(height=y2$City)
barplot(height=y2$ALASKA)
df = melt(data.frame(A=c(2, 10), B=c(3, 20),
experiment=c("X", "X & Y")),
variable_name="metric")
library(ggplot2)
?melt
ggplot(y2, aes(City)) + geom_bar
ggplot(y2, aes(City)) + geom_bar()
ggplot(y2, aes(City, ALASKA)) + geom_bar()
ggplot(y2, aes(x=City, y=ALASKA)) + geom_bar()
ggplot(y2, aes(x=City)) + geom_bar(mapping = ALASKA)
ggplot(y2, aes(x=City)) + geom_bar(mapping = y2$ALASKA)
?diamonds
head(diamonds)
y2
y2 <- spread(y1, Airline, ontime_ratio)
ggplot(data = y2) + geom_bar(mapping = aes(x=City))
y1
ggplot(y1, aes(x=City, y = ontime_ratio)) + geom_bar()
ggplot(y1, aes(x=City, y = ontime_ratio)) + geom_bar(stat="identity")
ggplot(y1, aes(x=City, y = ontime_ratio, fill=Airline)) + geom_bar(stat="identity")
ggplot(y1, aes(x=City, y = ontime_ratio, fill=Airline)) + geom_bar(stat="identity", position = position_dodge())
fullData_long_totalcount
ggplot(fullData_long_totalcount, aes(x=City, y = FlightCount, fill=Airline)) + geom_bar(stat="identity", position = position_dodge())
read.csv2(file = "https://raw.githubusercontent.com/san123i/CUNY/master/Semester1/607/Week5/data.csv", header = T, sep = ",",  na.strings = c("","NA"), blank.lines.skip = TRUE, stringsAsFactors = F)
?amsMath
??amsmath
?MiKTeX
install.packages("MiKTeX")
library(MiKTeX)
install.packages("MiKTeX")
install.packages("MiKTeX")
install.MikTeX(page_with_download_url = "http://miktex.org/download")
install.URL(page_with_download_url = "http://miktex.org/download")
install.packages("neo4r")
library(neo4r)
library(neo4r)
con <- neo4j_api$new(
url = "http://localhost:7474",
user = "admin",
password = "admin"
)
read_cypher("data-raw/create.cypher")
con$get_labels()
con <- neo4j_api$new(
url = "http://localhost:7474",
user = "neo4j",
password = "admin"
)
con$get_labels()
con$get_version()
call_neo4j("CREATE (TheMatrix:Movie {title:'The Matrix', released:1999, tagline:'Welcome to the Real World'})", con)
con$get_labels()
call_neo4j("CREATE (TheMatrix:MovieNew {title:'The Matrix', released:1999, tagline:'Welcome to the Real World'})", con)
con$get_labels()
install.packages("RNeo4j")
library(RNeo4j)
devtools::install_github("nicolewhite/RNeo4j")
setwd("C:/CUNY/GIT/CUNY/Semester1/607/Week12_Neo4J")
knitr::opts_chunk$set(echo = TRUE)
drug_df <- read.csv("usp_drug_classification.csv")
head(drug_df)
head(drug_df)
library(RMySQL)
dbConnection <- dbConnect(MySQL(), dbname="usp_drug_classification_607", user="root", password="root", host="localhost")
drug_df <- read.csv("usp_drug_classification.csv")
for (i in 1:nrow(drug_df)) {
row <- drug_df[i,]
insert <- paste("'","("+row[1]+","+row[2]+","+row[3]+","+row[4]+","+row[5]+")")
print(insert)
}
for (i in 1:nrow(drug_df)) {
row <- drug_df[i,]
insert <- paste("'","("+row[1],",",row[2],",",row[3],",",row[4],",",row[5],")")
print(insert)
}
for (i in 1:nrow(drug_df)) {
row <- drug_df[i,]
insert <- paste("'","("+row[1],",",row[2],",",row[3],",",row[4],",",row[5],")")
print(row)
}
row
row[1]
row[2]
row
row["usp_category"]
row["usp_class"]
drug_df <- read.csv("usp_drug_classification.csv",sep = ",")
drug_df[1,]
row <-drug_df[1,]
row[1]
row[3]
for (i in 1:nrow(drug_df)) {
row <- drug_df[i,]
insert <- paste("'","("+row[1],",",row[2],",",row[3],",",row[4],",",row[5],")")
print(row)
}
row
row[2]
row[5]
row[4]
paste("'","(",row[1],",",row[2],",",row[3],",",row[4],",",row[5],")")]
paste("'","(",row[1],",",row[2],",",row[3],",",row[4],",",row[5],")")
paste("'","(",row["usp_category"],",",row[2],",",row[3],",",row[4],",",row[5],")")
dbWriteTabl
install.packages("sqldf")
library(sqldf)
dbWriteTable(dbConnection, name="drug_data",value = drug_df)
dbConnection <- dbConnect(MySQL(), dbname="usp_drug_classification_607", user="root", password="root", host="localhost")
dbWriteTable(dbConnection, name="usp_drug_classification_607.drug_data",value = drug_df)
dbWriteTable(dbConnection, name="drug_data",value = drug_df)
dbWriteTable(dbConnection, name="drug_data2",value = drug_df)
dbWriteTable(dbConnection, name="drug_data2",value = drug_df)
dbWriteTable(dbConnection, name="drug_data3",value = drug_df)
?dbReadTable
dbReadTable(dbConnection, "drug_data3")
drug_table_data <- dbReadTable(dbConnection, name="drug_data3")
vec_to_cypher(drug_table_data[1, 1:3], "drug")
paste("CREATE", vec_to_cypher(drug_table_data[1, 1:], "drug"))
paste("CREATE", vec_to_cypher(drug_table_data[1, ], "drug"))
paste("CREATE", vec_to_cypher(drug_table_data[1, 1:4], "drug", drug_table_data[1,5]))
paste("CREATE", vec_to_cypher_with_var(drug_table_data[1, 1:4], "drug", drug_table_data[1,5]))
paste("CREATE", vec_to_cypher(drug_table_data[1, ], "drug"))
paste("CREATE", vec_to_cypher_with_var(drug_table_data[1, ], "drug","obj"))
dbConnection <- dbConnect(MySQL(), dbname="usp_drug_classification_607", user="root", password="root", host="localhost")
drug_df <- read.csv("usp_drug_classification.csv",sep = ",")
dbWriteTable(dbConnection, name="drug_data",value = drug_df)
drug_table_data <- dbReadTable(dbConnection, name="drug_data")
head(drug_table_data)
dbConnection <- dbConnect(MySQL(), dbname="usp_drug_classification_607", user="root", password="root", host="localhost")
drug_df <- read.csv("usp_drug_classification.csv",sep = ",")
head(drug_df)
#Load dataframe into MySQL table
dbWriteTable(dbConnection, name="drug_data",value = drug_df)
#Now load MySQL data into dataframe
drug_table_data <- dbReadTable(dbConnection, name="drug_data")
head(drug_table_data)
for(i in 1:nrow(drug_table_data)) {drug_table_data[i,]}
for(i in 1:nrow(drug_table_data)) {print(drug_table_data[i,])}
paste("CREATE", vec_to_cypher_with_var(drug_table_data[1, ], "drug","obj"))
paste("CREATE", vec_to_cypher_with_var(drug_table_data[1, ], "Drug","obj"))
?paste
paste("a","b", "  ")
paste(cypher_query, "CREATE", vec_to_cypher_with_var(drug_table_data[1, ], "Drug",drug_table_data[1,5])
)
paste("CREATE", vec_to_cypher_with_var(drug_table_data[1, ], "Drug",drug_table_data[1,5]))
drug_table_data[1,5]
knitr::opts_chunk$set(echo = TRUE)
library(RMySQL)
library(sqldf)
#Now load the dataframe into Neo4J graph DB
for(i in 1:nrow(drug_table_data)) {
cypher_query <- paste(cypher_query, "CREATE", vec_to_cypher_with_var(drug_table_data[1, ], "Drug","obj"), " ")
}
drug_id <- drug_table_data[i,5]
paste(cypher_query, "CREATE", vec_to_cypher_with_var(drug_table_data[1, ], "Drug",drug_id), " ")
cypher_query <- ""
paste(cypher_query, "CREATE", vec_to_cypher_with_var(drug_table_data[1, ], "Drug",drug_id), " ")
paste(cypher_query, "CREATE", vec_to_cypher_with_var(drug_table_data[1, ], "Drug",`drug_id`), " ")
cypher_query <- " "
for(i in 1:nrow(drug_table_data)) {
drug_id <- drug_table_data[i,5]
cypher_query <- paste(cypher_query, "CREATE", vec_to_cypher_with(drug_table_data[1, ], "Drug"), " ")
}
for(i in 1:nrow(drug_table_data)) {
drug_id <- drug_table_data[i,5]
cypher_query <- paste(cypher_query, "CREATE", vec_to_cypher(drug_table_data[1, ], "Drug"), " ")
}
cypher_query
con
call_neo4j(cypher_query, con)
cypher_query <- " "
for(i in 1:nrow(drug_table_data)) {
drug_id <- drug_table_data[i,5]
cypher_query <- paste(cypher_query, "CREATE", vec_to_cypher(drug_table_data[i, ], "Drug"), " ")
}
call_neo4j(cypher_query, con)
dbConnection <- dbConnect(MySQL(), dbname="flights_new", user="root", password="root", host="localhost")
routes_Df <- read.csv("Dummy_Airlines",sep = ",")
head(routes_Df)
dbConnection <- dbConnect(MySQL(), dbname="flights_new", user="root", password="root", host="localhost")
routes_Df <- read.csv("Dummy_Airlines",sep = ",")
getwd()
routes_Df <- read.csv("Dummy_Airlines.csv",sep = ",")
head(routes_Df)
dbWriteTable(dbConnection, name="flight_routes",value = routes_Df)
routes_table_data <- dbReadTable(dbConnection, name="flight_routes")
routes_table_data
cypher_query <- " "
for(i in 1:nrow(drug_table_data)) {
drug_id <- drug_table_data[i,5]
cypher_query <- paste(cypher_query, "CREATE", vec_to_cypher(drug_table_data[i, ], "Route"), " ")
}
cypher_query
knitr::opts_chunk$set(echo = TRUE)
library(RMySQL)
library(sqldf)
routes_Df <- read.csv("Dummy_Airlines.csv",sep = ",")
knitr::opts_chunk$set(echo = TRUE)
;
for(i in 1:nrow(drug_table_data)) {
drug_id <- drug_table_data[i,5]
cypher_query <- paste(cypher_query, "CREATE", vec_to_cypher(drug_table_data[i, ], "Drug"), " ")
}
cypher_query <- ""
for(i in 1:nrow(drug_table_data)) {
drug_id <- drug_table_data[i,5]
cypher_query <- paste(cypher_query, "CREATE", vec_to_cypher(drug_table_data[i, ], "Drug"), " ")
}
cypher_query
dbWriteTable?
;
?dbWriteTable
dbWriteTable(dbConnection, name="flight_routes",value = routes_Df)
dbWriteTable(dbConnection, name="flight_routes",value = routes_Df, overwrite=T)
ratings_drug <- c(9,9,4,10,10,2,8,10,10,1,3,9,6,10,5,5,7,7,8,10,3,9,9,5,4,10,9,9,3,5,7,1,9,1,8,8,6,8,8,8,10,10,8,9,10,1,10,10,7,8,5,3,9,7,4,1,9,1,9,10,7,10,10,4,7,7,8,7,2,1,10,7,10,10,1,9,6,3,9,5,4,8,9,9,3,1,7,9,6,8,7,7,10,4,10,8,1,10,6,10,8,7,4,8,10,1,4,4,7,7,5,10,8,7,7,10,5,10,10,4,2,9,10,9,1,8,7,7,8,10,2,7,5,5,10,7,8,1,2,1,7,10,10,8,1,3,8,8,8,9,1,8,9,10,1,8,3,10,2,7,3,1,6,3,6,3,8,7,1,10,10,5,9,5,7,7,7,10,9,1,8,4,5,3,8,4,8,9,10,10,8,9,7,8,10,5,6,9,10,10,10,7,6,10,10,8,8,7,4,3,8,1,1,8,9,5,10,10,10,7,7,10,9,7,10,6,7,8,9,7,10,10,7,9,9,10,8,7,1,1,7,9,5,7,10,3,10,10,1,8,8,9,7,5,10,8,8,9,5,5,2,10,3,7,10,5,10,7,6,8,4,9,9,5,8,9,9,10,8,5,9,8,8,10,6,8,4,3,9,9,10,10,8,10,9,10,5,7,8,3,1,8,2,8,6,9,8,9,8,5,10,10,2,5,1,9,8,8,8,9,3,10,6,8,6,10,8,8,7,7,2,1,9,8,8,6,1,3,1,1,10,8,7,8,5,9,1,8,4,9,8,7,7,10,7,3,1,3,1,8,10,1,5,4,10,10,8,2,8,3,8,8,3,4,8,10,4,4,10,10,10,4,5,8,2,1,8,9,1,2,10,5,5,9,9,8,1,3,10,2,3,8,8,6,10,8,9,10,10,8,1,8,9,10,6,2,8,4,8,2,10,3,2,5,8,6,5,9,8,6,9,8,1,10,10,5,9,9,10,6,1,10,9,2,4,7,2,5,10,1,8,9,1,9,10,8,10,10,10,10,10,9,5,4,5,9,1,9,1,10,4,5,5,1,9,6,1,10,1,7,8,4,9,8,6,9,1,6,5,10,1,6,9,1,3,8,10,9,10,8,8,10,1,8,10,4,2,2,10,10,10,10,6,8,8,1,10,1,10,10,6,1,8,10,7,1,3,4,8,8,9,7,9,9,8,10,7,10,9,8,10,7,10,10,8,9,10,1,9,4,5,2,10,7,6,8,8,8,8,10,5,10,10,1,8,8,10,10,1,5,8,1,6,1,1,8,8,10,1,5,10,6,10,8,6,10,8,9,8,7,9,10,10,8,5,7,1,3,9,10,4,7,10,9,5,10,2,10,10,9,7,7,5,7,3,7,8,1,5,1,8,10,10,7,1,10,1,1,4,10,1,1,8,3,10,3,1,8,1,9,9,2,10,1,10,7,3,10,10,1,1,8,1,6,8,4,10,6,9,8,10,9,7,1,10,4,7,9,9,10,3,9,10,7,10,8,8,1,7,10,7,5,10,3,4,7,10,8,9,10,6,10,6,8,8,8,2,4,10,1,10,8,10,8,9,10,2,10,7,7,7,5,8,5,8,10,8,8,6,8,8,8,7,9,1,8,8,7,7,10,9,10,5,9,3,1,10,1,10,9,10,10,3,4,3,7,4,3,6,3,8,10,7,1,1,7,6,7,10,7,9,6,10,10,10,7,6,8,3,10,4,10,8,9,7,7,10,7,3,1,9,1,7,9,7,9,8,2,9,10,10,6,5,7,6,1,1,10,5,9,7,8,8,10,9,7,10,8,1,8,8,8,7,3,5,6,9,3,7,9,7,8,7,9,1,10,1,10,9,2,10,9,8,8,10,1,9,10,1,9,8,7,1,1,4,5,8,9,3,9,1,4,7,10,10,8,7,10,7,8,10,5,1,10,8,10,8,8,10,9,2,10,8,9,10,10,1,8,10,10,8,3,5,10,1,8,9,7,1,1,7,7,10,3,8,9,5,6,7,4,7,10,10,9,8,6,9,7,9,7,10,10,6,1,10,6,2,9,8,1,4,8,7,9,8,7,10,1,7,10,8,10,9,8,8,5,7,1,5,10,9,8,4,5,9,6,9,8,10,8,6,1,10,10,7,8,6,3,10,5,8,7,5,8,7,10,6,8,8,7,9,1,9,7,6,8,1,10,10,9,8,5,10,7,7,2,8,9,6,2,8,1,10,8,10,6,5,1,6,10,7,1,10,8,5,1,3,6,6,9,1,8,8,8,9,10,9,8,1,8,2,7,4,6,10,9,9,10,10,5,9,7,10,8,10,8)
ratings_drug
hist(ratings_drug)
library(tidyverse)
pnorm(ratings_drug)
qnorm(ratings_drug)
qqnorm(ratings_drug)
?qqnorm
qqline(ratings_drug)
hist(ratings_drug, 100, col = "black")
shapiro.test(ratings_drug)
mean(ratings_drug)
summarise(ratings_drug)
str(ratings_drug)
setwd("C:/CUNY/GIT/CUNY/Semester1/607/FinalProject")
read.csv("drugLibTest_raw.csv")
read.csv("drugLibTest_raw.tsv")
drugs_df <- read.csv("drugLibTest_raw.tsv")
drugs_df
drugs_df <- read.csv("drugLibTest_raw.csv")
View(drugs_df)
summarise(drugs_df, rating)
summarise(drugs_df, 'rating')
?summarize
?summarise
mean(drugs_df$rating)
boxplot(ratings_drug)
?subset
library(dplyr)
?subset
subset(drug_df, effectiveness=='Highly Effective')
drug_df$effectiveness
drug_df$effectiveness
drug_df$rating
colnames(drug_df)
subset(drugs_df, effectiveness=='Highly Effective')
colnames(drugs_df)
drugs_df$effectiveness
subset(drugs_df, effectiveness=='Highly Effective')
highly_eff_drugs <- subset(drugs_df, effectiveness=='Highly Effective')
hist(highly_eff_drugs$rating)
hist(highly_eff_drugs$sideEffects)
library(ggplot2)
ggplot(highly_eff_drugs,aes(x=sideEffects))+geom_histogram()
ggplot(highly_eff_drugs,aes(x=sideEffects))+geom_histogram(stat = count)
ggplot(highly_eff_drugs,aes(x=sideEffects))+geom_histogram(stat=identity)
ggplot(highly_eff_drugs,aes(x=sideEffects))+geom_histogram(stat='identity')
ggplot(highly_eff_drugs,aes(x=sideEffects))+geom_histogram(position='identity')
ggplot(highly_eff_drugs,aes(x=sideEffects))+geom_bar()
drugs_df$effectiveness <- as.factor(drugs_df$effectiveness)
drugs_df$sideEffects <- as.factor(drugs_df$sideEffects)
drugs_df$effectiveness <- as.factor(drugs_df$effectiveness, levels=c('Ineffective','Marginally Effective','Moderately Effective','Considerably Effective','Highly Effective'))
drugs_df$effectiveness <- factor(drugs_df$effectiveness, levels=c('Ineffective','Marginally Effective','Moderately Effective','Considerably Effective','Highly Effective'))
drugs_df$sideEffects <- factor(drugs_df$sideEffects,levels=c('No Side Effects','Mild Side Effects','Moderate Side Effects','Severe Side Effects','Extremely Severe Side Effects'))
ggplot(highly_eff_drugs,aes(x=sideEffects))+geom_bar()
table(drugs_df)
