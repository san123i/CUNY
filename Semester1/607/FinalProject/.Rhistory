ggplot(data = sales_df, aes(x=Age, y=Purchase)) + geom_bar(stat = count())
ggplot(data = sales_df, aes(x=Age, y=Purchase)) + geom_bar(stat = count
)
ggplot(data = sales_df, aes(x=Age, y=Purchase)) + geom_bar(stat = count)
ggplot(data = sales_df, aes(x=Age, y=Purchase)) + geom_bar(stat = 'count')
ggplot(data = sales_df, aes(x=Age, y=Purchase)) + geom_col()
setwd("C:/CUNY/GIT/SPRING2019TIDYVERSE")
dbConnection <- dbConnect(MySQL(), dbname="student_enrollment", user="root", password="root", host="localhost")
library(RMySQL)
library(sqldf)
library(neo4r)
dbConnection <- dbConnect(MySQL(), dbname="student_enrollment", user="root", password="root", host="localhost")
students_df <- read.csv("Students.csv",sep = ",")
setwd("C:/CUNY/GIT/CUNY/Semester1/607/Week12_Neo4J")
students_df <- read.csv("Students.csv",sep = ",")
subjects_df <- read.csv("Subjects.csv",sep = ",")
dbWriteTable(dbConnection, name="students_enrollments",value = students_df, overwrite=T)
dbWriteTable(dbConnection, name="subjects",value = subjects_df, overwrite=T)
students_table_data <- dbReadTable(dbConnection, name="students_enrollments")
subjects_table_data <- dbReadTable(dbConnection, name="subjects")
View(subjects_table_data)
students_df <- read.csv("Students.csv",sep = ",")
subjects_df <- read.csv("Subjects.csv",sep = ",")
dbWriteTable(dbConnection, name="students_enrollments",value = students_df, overwrite=T)
dbConnection <- dbConnect(MySQL(), dbname="student_enrollment", user="root", password="root", host="localhost")
dbWriteTable(dbConnection, name="students_enrollments",value = students_df, overwrite=T)
dbWriteTable(dbConnection, name="subjects",value = subjects_df, overwrite=T)
students_table_data <- dbReadTable(dbConnection, name="students_enrollments")
subjects_table_data <- dbReadTable(dbConnection, name="subjects")
View(subjects_table_data)
View(students_table_data)
for(i in 1:nrow(students_table_data)) {
cypher_query <- paste(cypher_query, "CREATE", vec_to_cypher(students_table_data[i, ], "Student"), " ")
}
cypher_query <- " "
for(i in 1:nrow(students_table_data)) {
cypher_query <- paste(cypher_query, "CREATE", vec_to_cypher(students_table_data[i, ], "Student"), " ")
}
cypher_query
cypher_query_subject <- " "
i <- 0
for(i in 1:nrow(subjects_table_data)) {
cypher_query_subject <- paste(cypher_query_subject, "CREATE", vec_to_cypher(subjects_table_data[i, ], "Subject"), " ")
}
cypher_query_subject
neo4j_api$new( url = "http://localhost:7474",  user = "neo4j",  password = "neo4j" )
neo4j_api$new( url = "http://localhost:7474",  user = "admin",  password = "admin" )
neo4j_api$new( url = "http://localhost:7474",  user = "root",  password = "root" )
neo4j_api$new( url = "http://localhost:7474",  user = "neo4j",  password = "admin" )
dbConnection <- dbConnect(MySQL(), dbname="student_enrollment", user="root", password="root", host="localhost")
students_df <- read.csv("Students.csv",sep = ",")
subjects_df <- read.csv("Subjects.csv",sep = ",")
dbWriteTable(dbConnection, name="students_enrollments",value = students_df, overwrite=T)
dbWriteTable(dbConnection, name="subjects",value = subjects_df, overwrite=T)
students_table_data <- dbReadTable(dbConnection, name="students_enrollments")
subjects_table_data <- dbReadTable(dbConnection, name="subjects")
con <- neo4j_api$new( url = "http://localhost:7474",  user = "neo4j",  password = "admin" )
neo4j_api("MATCH (n) DETACH DELETE n", con)
library(neo4r)
neo4j_api("MATCH (n) DETACH DELETE n", con)
neo4j_api
neo4j_api("MATCH (n) DETACH DELETE n", con)
?neo4j_api
call_neo4j("MATCH (n) DETACH DELETE n", con)
call_neo4j("MATCH (n) DETACH DELETE n", con)
cypher_query_student <- " "
for(i in 1:nrow(students_table_data)) {
cypher_query_student <- paste(cypher_query_student, "CREATE", vec_to_cypher(students_table_data[i, ], "Student"), " ")
}
cypher_query_student
call_neo4j(cypher_query_student, con)
cypher_query_subject <- " "
i <- 0
for(i in 1:nrow(subjects_table_data)) {
cypher_query_subject <- paste(cypher_query_subject, "CREATE", vec_to_cypher(subjects_table_data[i, ], "Subject"), " ")
}
cypher_query_subject
call_neo4j(cypher_query_subject, con)
call_neo4j("MATCH (a:Student), (b:Subject) WHERE (a.SubjectId) = (b.SubjectId) CREATE (a) -[:ENROLLED_INTO]-> (b);", dbConnection)
call_neo4j("MATCH (a:Student), (b:Subject) WHERE (a.SubjectId) = (b.SubjectId) CREATE (a) -[:ENROLLED_INTO]-> (b);", con)
call_neo4j("MATCH (a:Student), (b:Subject) WHERE (a.SubjectId) = (b.SubjectId) CREATE (a) -[:ENROLLED_INTO]-> (b) return a, b;", con)
library(tidyverse)
grads <- read.csv("https://raw.githubusercontent.com/san123i/CUNY/master/Semester1/606/Project/grad-students.csv")
ggplot(grads, aes(x=grads$Major_category, y = Grad_total)) + geom_bar(stat="identity") + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
?grepl
grep("science", "Data Science", ignore.case = T)
grep("science", "Data Scienc2e", ignore.case = T)
grepl("science", "Data Science", ignore.case = T)
grepl("science", "Data S3cience", ignore.case = T)
grepl("science", "Data 2Science", ignore.case = T)
l <- c("Science","st")
grepl(l, "Data 2Science", ignore.case = T)
grepl("science
|math", "Data 2Science", ignore.case = T)
grepl("science|math", "Data 2Science", ignore.case = T)
grepl("science|math", "Data 2Scien ce math", ignore.case = T)
grepl("science|math", "Data 2Science math", ignore.case = T)
isSTEM <- function(majorCategory){
return grepl("science|math|engineering|technology|computer", majorCategory, ignore.case = T)
}
isSTEM <- function(majorCategory){
return(grepl("science|math|engineering|technology|computer", majorCategory, ignore.case = T))
}
isSTEM("Computers & Mathematics")
isSTEM("Comput & Mathematics")
grads_2 <- grads %>% mutate("isSTEM", isSTEM(majorCategory))
grads_2 <- grads %>% mutate("isSTEM", isSTEM(Major_category))
View(grads_2)
grads_2 <- NULL
grads_2 <- grads %>% mutate("isSTEM", isSTEM(Major_category))
View(grads_2)
grads_2 <- grads %>% mutate("isSTEM", isSTEM(Major_category))
grads_2 <- NULL
grads_2 <- grads %>% mutate("isSTEM"=isSTEM(Major_category))
View(grads_2)
grads_2 %>% subset(isSTEM==T)
grepl("science|math|engineering|technology|computer|!Social", "Social Science", ignore.case = T)
grepl("!Social|science|math|engineering|technology|computer", "Social Science", ignore.case = T)
grepl("-Social|science|math|engineering|technology|computer", "Social Science", ignore.case = T)
!grepl("-Social|science|math|engineering|technology|computer", "Social Science", ignore.case = T)
!grepl("science|math|engineering|technology|computer", "Social Science", ignore.case = T)
isSTEM <- function(majorCategory){
major <- grepl("science|math|engineering|technology|computer|!Social", majorCategory, ignore.case = T)
return(!grepl("Social", major, ignore.case = T))
}
isSTEM("Social Engineering")
?ifelse
isSTEM <- function(majorCategory){
result <- grepl("science|math|engineering|technology|computer|!Social", majorCategory, ignore.case = T)
return(ifelse(result, !grepl("Social", major, ignore.case = T), result))
}
isSTEM("Social Engineering")
isSTEM <- function(majorCategory){
result <- grepl("science|math|engineering|technology|computer|!Social", majorCategory, ignore.case = T)
return(ifelse(result, !grepl("Social", majorCategory, ignore.case = T), result))
}
isSTEM("Social Engineering")
isSTEM("Socisal Engineering")
grads_2 <- NULL
grads_2 <- grads %>% mutate("isSTEM", isSTEM(Major_category))
grads_2 <- NULL
grads_2 <- grads %>% mutate("isSTEM"=isSTEM(Major_category))
View(grads_2)
ggplot(grads, aes(x=grads$Major_category, y = Grad_total)) + geom_bar(stat="identity") + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
ggplot(grads, aes(x=grads$Major_category, y = Grad_total, fill=isSTEM, label=Grad_total)) + geom_bar(stat="identity") + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
ggplot(grads, aes(x=grads$Major_category, y = Grad_total, fill=isSTEM, label=Grad_total)) + geom_bar(stat="identity") + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))grads <- read.csv("https://raw.githubusercontent.com/san123i/CUNY/master/Semester1/606/Project/grad-students.csv")
grads <- read.csv("https://raw.githubusercontent.com/san123i/CUNY/master/Semester1/606/Project/grad-students.csv")
grads <- grads %>% mutate("isSTEMMajor"=isSTEM(Major_category))
ggplot(grads, aes(x=grads$Major_category, y = Grad_total, fill=isSTEMMajor, label=Grad_total)) + geom_bar(stat="identity") + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
;
isSTEM <- function(majorCategory){
result <- grepl("science|math|engineering|technology|computer|!Social", majorCategory, ignore.case = T)
result <- ifelse(result, !grepl("Social", majorCategory, ignore.case = T), result)
return(ifelse(result, "STEM","NON-STEM"));
}
grads <- read.csv("https://raw.githubusercontent.com/san123i/CUNY/master/Semester1/606/Project/grad-students.csv")
grads <- grads %>% mutate("Major_Type_STEM"=isSTEM(Major_category))
ggplot(grads, aes(x=grads$Major_category, y = Grad_total, fill=isSTEMMajor, label=Grad_total)) + geom_bar(stat="identity") + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
ggplot(grads, aes(x=grads$Major_category, y = Grad_total, fill=Major_Type_STEM, label=Grad_total)) + geom_bar(stat="identity") + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
ggplot(grads, aes(x=grads$Major_category, y = Grad_total, fill=Major_Type_STEM, label=Grad_total)) + geom_bar(stat="identity") + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))+geom_text(size = 3, position = position_stack(vjust = 0.5))
ggplot(grads, aes(x=grads$Major_category, y = Grad_total, fill=Major_Type_STEM, label=sum(Grad_total))) + geom_bar(stat="identity") + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))+geom_text(size = 3, position = position_stack(vjust = 0.5))
ggplot(grads, aes(x=grads$Major_category, y = Grad_total, fill=Major_Type_STEM)) + geom_bar(stat="identity") + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))+geom_text(size = 3, position = position_stack(vjust = 0.5))
ggplot(grads, aes(x=grads$Major_category, y = Grad_total, fill=Major_Type_STEM)) + geom_bar(stat="identity") + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
values <- data.frame(value = c("a", "a", "a", "a", "a",
"b", "b", "b",
"c", "c", "c", "c"))
nr.of.appearances <- aggregate(x = values,
by = list(unique.values = values$value),
FUN = length)
nr.of.appearances
?aggregate;
aggregate(grads, by=Major_category, FUN=sum(Grad_total))
aggregate(grads, by=Major_category, FUN=sum(grads$Grad_total))
aggregate(grads$Major_category, by=list(Major_Category=grads$Major_category), FUN=sum))
aggregate(grads$Major_category, by=list(Major_Category=grads$Major_category), FUN=sum)
aggregate(Grad_total ~ Major_category, grads, sum)
x <- aggregate(Grad_total ~ Major_category, grads, sum)
typeof(x)
x[1]
x[2]
list <- aggregate(Grad_total ~ Major_category, grads, sum)
barplot(list)
barplot(he)
barplot(height = list[2])
barplot(height = list)
ggplot(list, aes(x=Major_category, y=Grad_total)) + geom_bar()
ggplot(list, aes(x=Major_category, y=Grad_total)) + geom_hist()
geom_histogram()
ggplot(list, aes(x=Major_category, y=Grad_total)) + geom_histogram()
ggplot(list, aes(x=Major_category, y=Grad_total)) + geom_col()
ggplot(list, aes(x=Major_category, y=Grad_total)) + geom_col() + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
ggplot(list, aes(x=Major_category, y=Grad_total, label=Grad_total)) + geom_col() + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5)) +
geom_text(size = 3, position = position_stack(vjust = 0.5))
ggplot(list, aes(x=Major_category, y=Grad_total, label=Grad_total)) + geom_col() + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5)) +
geom_text(size = 3, position = position_stack(vjust = 0.5), color=White)
ggplot(list, aes(x=Major_category, y=Grad_total, label=Grad_total)) + geom_col() + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5)) +
geom_text(size = 3, position = position_stack(vjust = 0.5), color=white)
ggplot(list, aes(x=Major_category, y=Grad_total, label=Grad_total)) + geom_col() + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5)) +
geom_text(size = 3, position = position_stack(vjust = 0.5), color='white')
ggplot(grads, aes(x=Major, fill=Major_category)) + geom_col() + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
ggplot(grads, aes(x=Major, y=Major_category, fill=Major_category)) + geom_col() + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
count <- aggregate(. ~ Major_category, grads, sum)
list <- aggregate(Grad_total ~ Major_category, grads, sum)
aggregate(Grad_total ~ Major_category, grads, count)
aggregate(Grad_total ~ Major_category, grads, nrow())
aggregate(Grad_total ~ Major_category, grads, nrow
)
aggregate(Grad_total ~ Major_category, grads, nrow)
ggplot(grads, aes(x=Major, fill=Major_category)) + geom_point()
ggplot(grads, aes(x=Major, y=Major_category)) + geom_point()
?barplot
?boxplot
list <- aggregate(Grad_total ~ Major_Type_STEM, grads, sum)
ggplot(list, aes(x=Major_Type_STEM, y=Grad_total, label=Grad_total)) + geom_col() + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5)) +
geom_text(size = 3, position = position_stack(vjust = 0.5), color='white')
ggplot(grads, aes(x=grads$Major_category, y = Grad_P25, fill=Major_Type_STEM)) + geom_bar(stat="identity") + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5), title = 'Graduates by major category type')
ggplot(grads, aes(x=grads$Major_category, y = Grad_P25, fill=Major_Type_STEM)) + geom_bar(stat="identity") + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5)
)
ggplot(grads, aes(x=grads$Major_category, y = Grad_P75, fill=Major_Type_STEM)) + geom_bar(stat="identity") + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
ggplot(grads, aes(x=grads$Major_category, y = Grad_Median, fill=Major_Type_STEM)) + geom_bar(stat="identity") + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
ggplot(grads, aes(x=grads$Major_category, y = Grad_median, fill=Major_Type_STEM)) + geom_bar(stat="identity") + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
list <- aggregate(Grad_total ~ Major_category, grads, sum)
ggplot(list, aes(x=Major_category, y=Grad_total, label=Grad_total)) + geom_col() + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))+ labs(title = '# of Graduates by major category type') +
geom_text(size = 3, position = position_stack(vjust = 0.5), color='white')
plot(x=grads$Major_category, y=grads$Grad_median)
ggplot(grads, aes=(x=grads$Major_category, y=grads$Grad_median)) + geom_point()
ggplot(grads, aes(x=grads$Major_category, y=grads$Grad_median)) + geom_point()
ggplot(grads, aes(x=grads$Major, y=grads$Grad_median)) + geom_point()
ggplot(grads, aes(x=grads$Major, y=grads$Grad_median, fill=grads$Major_Type_STEM)) + geom_point()
ggplot(grads, aes(x=grads$Major, y=grads$Grad_median, shape=grads$Major_Type_STEM)) + geom_point()
ggplot(grads, aes(x=grads$Major, y=grads$Grad_median, shape=grads$Major_Type_STEM)) + geom_point()  + scale_shape_manual(values=c(1, 2))
ggplot(grads, aes(x=grads$Major, y=grads$Grad_median, shape=grads$Major_Type_STEM)) + geom_point()  + scale_shape_manual(values=c(19, 2))
ggplot(grads, aes(x=grads$Major, y=grads$Grad_median, shape=grads$Major_Type_STEM, group=Major_Type_STEM)) + geom_point()  + scale_shape_manual(values=c(19, 2)) +
geom_line(linetype="dashed", color="blue", size=1.2)+
;
ggplot(grads, aes(x=grads$Major, y=grads$Grad_median, shape=grads$Major_Type_STEM, group=Major_Type_STEM)) + geom_point()  + scale_shape_manual(values=c(19, 2)) +
geom_line(linetype="dashed", color="blue", size=1.2)
ggplot(grads, aes(x=grads$Major, y=grads$Grad_median, shape=grads$Major_Type_STEM)) + geom_point()  + scale_shape_manual(values=c(19, 2))
ggplot(grads, aes(x=grads$Major, y=grads$Grad_median, shape=grads$Major_Type_STEM, color=c('red','green'))) + geom_point()  + scale_shape_manual(values=c(19, 2))
ggplot(grads, aes(x=grads$Major, y=grads$Grad_median, shape=grads$Major_Type_STEM, colour=c('red','green'))) + geom_point()  + scale_shape_manual(values=c(19, 2))
ggplot(grads, aes(x=grads$Major, y=grads$Grad_median, shape=grads$Major_Type_STEM, colour=Major_Type_STEM) + geom_point()  + scale_shape_manual(values=c(19, 2))
)
ggplot(grads, aes(x=grads$Major, y=grads$Grad_median, shape=grads$Major_Type_STEM, colour=Major_Type_STEM)) + geom_point()  + scale_shape_manual(values=c(19, 2))
ggplot(grads, aes(x=Major, y=Grad_median, shape=Major_Type_STEM, colour=Major_Type_STEM)) + geom_point()  + scale_shape_manual(values=c(19, 2))
ggplot(data = grads, aes(x=Major_cateory, y=Grad_median)) + geom_boxplot() + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
ggplot(grads, aes(x=Major_cateory, y=Grad_median, shape=Major_Type_STEM, colour=Major_Type_STEM)) + geom_point()  + scale_shape_manual(values=c(19, 2))
ggplot(data = grads, aes(x=grads$Major_cateory, y=grads$Grad_median)) + geom_boxplot() + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
ggplot(data = grads, aes(x=grads$Major_cateory, y=grads$Grad_median)) + geom_boxplot()
ggplot(data = grads, aes(x=grads$Major_cateory, y=grads$Grad_median)) + geom_boxplot()ggplot(data = grads, aes(x=grads$Major_cateory, y=grads$Grad_median)) + geom_boxplot()
ggplot(data = grads, aes(x=grads$Major_cateory, y=grads$Grad_median)) + geom_boxplot()
ggplot(grads, aes(x=grads$Major_cateory, y=grads$Grad_median)) + geom_boxplot()
ggplot(grads, aes(Major_cateory, y=Grad_median)) + geom_boxplot()
ggplot(grads, aes(Major_category, y=Grad_median)) + geom_boxplot()
ggplot(data = grads, aes(x=grads$Major_cateory, y=grads$Grad_median)) + geom_boxplot()ggplot(data = grads, aes(x=grads$Major_cateory, y=grads$Grad_median)) + geom_boxplot() ggplot(data = grads, aes(x=Major_category, y=Grad_median)) + geom_boxplot()  +  theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
ggplot(data = grads, aes(x=Major_category, y=Grad_median)) + geom_boxplot()  +  theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
ggplot(grads, aes(Major_category, Grad_median)) + geom_boxplot()  +  theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
list <- aggregate(Grad_total ~ Major_category, grads, sum)
ggplot(list, aes(x=Major_category, y=Grad_total, label=Grad_total)) + geom_col() + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))+ labs(title = '# of Graduates by major category type') +
geom_text(size = 3, position = position_stack(vjust = 0.5), color='white')
list <- aggregate(Grad_total ~ Major_category, grads, sum)
ggplot(list, aes(x=Major_category, y=Grad_total, label=Grad_total)) + geom_col() + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))+ labs(title = '# of Graduates by major category type') +
geom_text(size = 3, position = position_stack(vjust = 1), color='white')
ggplot(list, aes(x=Major_Type_STEM, y=Grad_total, label=Grad_total, label.size=.25)) + geom_col() + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))+ labs(title = '# of Graduates by STEM type') +
geom_text(size = 3, position = position_stack(vjust = 0.5), color='white')
list <- aggregate(Grad_total ~ Major_category, grads, sum)
ggplot(list, aes(x=Major_category, y=Grad_total, label=Grad_total)) + geom_col() + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))+ labs(title = '# of Graduates by major category type') +
geom_text(size = 3, position = position_stack(vjust = 0.5), color='white')
ggplot(list, aes(x=Major_category, y=Grad_total, label=Grad_total, label.size=.25)) + geom_col() + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))+ labs(title = '# of Graduates by major category type') +
geom_text(size = 3, position = position_stack(vjust = 0.5), color='white')
summary(grads)
grads <- read.csv("https://raw.githubusercontent.com/san123i/CUNY/master/Semester1/606/Project/grad-students.csv")
ggplot(grads, aes(Major_Type_STEM, Grad_median)) + geom_boxplot()  +  theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
ggplot(grads, aes(Major_Type_STEM, Grad_median, fill=Major_Type_STEM)) + geom_boxplot()  +  theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
ggplot(grads, aes(x=reorder(Major_category, -value), y = Grad_total, fill=Major_Type_STEM)) + geom_bar(stat="identity") + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))+ labs( title = 'Graduates by major category type')
ggplot(grads, aes(x=reorder(Major_category, -Grad_total), y = Grad_total, fill=Major_Type_STEM)) + geom_bar(stat="identity") + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))+ labs( title = 'Graduates by major category type')
?aov
aov(grads$Grad_median ~ grads$Major_Type_STEM)
aov(grads$Grad_median ~ grads$Major_category)
aov(grads$Grad_median ~ grads$Category)
aov(grads$Grad_median ~ grads$Major)
aov(grads$Grad_median ~ grads$Major_Type_STEM)
anova <- aov(grads$Grad_median ~ grads$Major_Type_STEM)
summary(anova)
plot
plot(anova)
plot(anova)
setwd("C:/CUNY/GIT/CUNY/Semester1/606/week8/Lab8")
plot(evals$score ~ evals$bty_avg)
load("more/evals.RData")
hist(evals$score)
plot(evals$rank ~ evals$language)
plot(evals$rank ~ evals$age)
ggplot(evals, aes(age, rank)) + geom_point()
plot(evals$rank ~ evals$language)
plot(evals$score ~ evals$bty_avg)
plot(evals$score ~ evals$age)
plot(evals$rank ~ evals$language)
?boxplot
plot(evals$score ~ evals$bty_avg)
?jitter
jitter(evals$score)
plot(jitter(evals$score) ~ jitter(evals$bty_avg))
plot(jitter(evals$score) ~ jitter(evals$bty_avg))
?m_bty
abline(m_bty)
m_bty <- lm(score~bty_avg)
m_bty <- lm(score~bty_avg, data = evals)
abline(m_bty)
lm(score~bty_avg, data = evals)
?plot_ss
load("C:/CUNY/GIT/CUNY/Semester1/606/week7/Lab7/more/mlb11.RData")
load("more/plot_ss.R")
plot_ss(evals$score, evals$bty_avg)
plot_ss(evals$score, evals$bty_avg)
plot_ss(evals$score, evals$bty_avg)
plot(evals$bty_avg ~ evals$bty_f1lower)
cor(evals$bty_avg, evals$bty_f1lower)
plot(evals[,13:19])
m_bty <- lm(score~bty_avg, data = evals)
abline(m_bty)
m_bty
m_bty <- lm(score~bty_avg, data = evals)
abline(m_bty)
plot(evals[,13:19])
m_bty_gen <- lm(score ~ bty_avg + gender, data = evals)
summary(m_bty_gen)
multiLines(m_bty_gen
)
m_bty_rank <- lm(score~bty_avg+rank, data = evals)
summary(m_bty_rank)
evals$rank
m_bty_rank <- lm(score~bty_avg + rank, data = evals)
m_bty_rank
summary(m_bty_rank)
m_full <- lm(score ~ rank + ethnicity + gender + language + age + cls_perc_eval
+ cls_students + cls_level + cls_profs + cls_credits + bty_avg
+ pic_outfit + pic_color, data = evals)
summary(m_full)
evals$bty_avg
mean(evals$bty_avg)
m_bty_rank <- lm(score~bty_avg+rank, data = evals)
summary(m_bty_rank)
summary(m_bty_gen
)
m_full <- lm(score ~ rank + ethnicity + gender + language + age + cls_perc_eval
+ cls_students + cls_level + cls_profs + cls_credits + bty_avg
+ pic_outfit + pic_color, data = evals)
summary(m_full)
distinct(evals$pic_outfit)
evals$pic_outfit
m_rank_score <- lm(score ~ rank+age, data = evals)
summary(m_rank_score)
m_eth_score <- lm(score ~ ethnicity, data = evals)
summary(m_eth_score)
m_full <- lm(score ~ rank + ethnicity + gender + language + age + cls_perc_eval
+ cls_students + cls_level + cls_profs + cls_credits + bty_avg
+ pic_outfit + pic_color, data = evals)
summary(m_full)
m_full_minus_cls_credits <- lm(score ~ rank + ethnicity + gender + language + age + cls_perc_eval
+ cls_students + cls_level + cls_profs  + bty_avg
+ pic_outfit + pic_color, data = evals)
summary(m_full_minus_cls_credits)
m_full <- lm(score ~ rank + ethnicity + gender + language + age + cls_perc_eval
+ cls_students + cls_level + cls_profs + cls_credits + bty_avg
+ pic_outfit + pic_color, data = evals)
summary(m_full)
m_full <- lm(score ~ rank + ethnicity + gender + language + age + cls_perc_eval
+ cls_students + cls_level + cls_profs + cls_credits + bty_avg
+ pic_outfit, data = evals)
summary(m_full)
m_full <- lm(score ~ rank + ethnicity + gender + language + age + cls_perc_eval
+ cls_students + cls_level + cls_profs + cls_credits + bty_avg
+ pic_color, data = evals)
summary(m_full)
m_full <- lm(score ~ rank + ethnicity + gender + language + age + cls_perc_eval
+ cls_students + cls_level + cls_profs + cls_credits
+ pic_outfit + pic_color, data = evals)
summary(m_full)
m_full <- lm(score ~ rank + ethnicity + gender + language + age + cls_perc_eval
+ cls_students + cls_level + cls_profs + cls_credits + bty_avg
+ pic_color, data = evals)
summary(m_full)
m_full <- lm(score ~ rank + ethnicity + gender + language + age + cls_perc_eval
+ cls_students + cls_level + cls_profs  + bty_avg
+ pic_outfit + pic_color, data = evals)
summary(m_full)
m_full <- lm(score ~ rank + ethnicity + gender + language + age + cls_perc_eval
+ cls_students + cls_level + cls_profs + cls_credits + bty_avg
+ pic_outfit + pic_color, data = evals)
summary(m_full)
m_full <- lm(score ~ rank + ethnicity + gender + language + age + cls_perc_eval
+ cls_students + cls_level +  cls_credits + bty_avg
+ pic_outfit + pic_color, data = evals)
summary(m_full)
m_full <- lm(score ~ rank + ethnicity + gender + language + age + cls_perc_eval
+ cls_students +  cls_profs + cls_credits + bty_avg
+ pic_outfit + pic_color, data = evals)
summary(m_full)
m_full <- lm(score ~ rank + ethnicity + gender + language + age + cls_perc_eval
+ cls_students + cls_level +  cls_credits + bty_avg
+ pic_outfit + pic_color, data = evals)
summary(m_full)
m_full <- lm(score ~ rank + ethnicity + gender + language + age + cls_perc_eval
+ cls_level + cls_profs + cls_credits + bty_avg
+ pic_outfit + pic_color, data = evals)
summary(m_full)
m_full <- lm(score ~ rank + ethnicity + gender + language + age
+ cls_students + cls_level +  cls_credits + bty_avg
+ pic_outfit + pic_color, data = evals)
summary(m_full)
m_full <- lm(score ~ rank + ethnicity + gender + language + age
+ cls_students + cls_level + cls_profs + cls_credits + bty_avg
+ pic_outfit + pic_color, data = evals)
summary(m_full)
m_full <- lm(score ~ rank + ethnicity + gender + language  + cls_perc_eval
+ cls_students + cls_level + cls_profs + cls_credits + bty_avg
+ pic_outfit + pic_color, data = evals)
summary(m_full)
m_full <- lm(score ~ rank + ethnicity + gender  + age + cls_perc_eval
+ cls_students + cls_level + cls_profs + cls_credits + bty_avg
+ pic_outfit + pic_color, data = evals)
summary(m_full)
m_full <- lm(score ~ rank + ethnicity  + language + age + cls_perc_eval
+ cls_students + cls_level + cls_profs + cls_credits + bty_avg
+ pic_outfit + pic_color, data = evals)
summary(m_full)
m_full <- lm(score ~ rank + ethnicity  + language + age + cls_perc_eval
+ cls_students + cls_level + cls_profs + cls_credits + bty_avg
+ pic_outfit + pic_color, data = evals)
summary(m_full)
m_full <- lm(score ~ rank  + gender + language + age + cls_perc_eval
+ cls_students + cls_level + cls_profs + cls_credits + bty_avg
+ pic_outfit + pic_color, data = evals)
summary(m_full)
m_full <- lm(score ~  ethnicity + gender + language + age + cls_perc_eval
+ cls_students + cls_level + cls_profs + cls_credits + bty_avg
+ pic_outfit + pic_color, data = evals)
summary(m_full)
m_full <- lm(score ~ rank + ethnicity + gender + language + age + cls_perc_eval
+ cls_students + cls_level  + cls_credits + bty_avg
+ pic_outfit + pic_color, data = evals)
summary(m_full)
m_full <- lm(score ~ rank + ethnicity + gender + language + age + cls_perc_eval
+ cls_students + cls_level + cls_profs + cls_credits + bty_avg
+ pic_outfit + pic_color, data = evals)
summary(m_full)
m_full_minus_cls_profs <- lm(score ~ rank + ethnicity + gender + language + age + cls_perc_eval
+ cls_students + cls_level  + cls_credits + bty_avg
+ pic_outfit + pic_color, data = evals)
summary(m_full_minus_cls_profs)
plot(m_full_minus_cls_profs)
plot(m_full_minus_cls_profs)
plot(m_full_minus_cls_profs)
m_full_minus_cls_profs <- lm(score ~ language, data = evals)
summary(m_full_minus_cls_profs)
hist(m_bty_gen$residuals)
var(m_bty_gen)
plot(m_bty_gen$residuals)
boxplot(evals$rank)
boxplot(m_bty_gen$rank)
boxplot(m_bty_gen$rank, m_bty_gen$residuals)
boxplot(m_bty_gen$bty_avg, m_bty_gen$residuals)
boxplot(m_bty_gen$gender, m_bty_gen$residuals)
boxplot(m_bty_gen$gender, m_bty_gen$residuals)
m_bty_gen$gender
m_bty_gen
boxplot(m_bty_gen$gendermale, m_bty_gen$residuals)
plot(score ~ evals$gender)
plot(evals$score ~ evals$gender)
setwd("C:/CUNY/GIT/CUNY/Semester1/607/FinalProject")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
all_drugs_df <- read.csv("drugLibTest_raw.csv")
all_drugs_df$effectiveness <- factor(all_drugs_df$effectiveness, levels=c('Ineffective','Marginally Effective','Moderately Effective','Considerably Effective','Highly Effective'))
all_drugs_df$sideEffects <- factor(all_drugs_df$sideEffects,levels=c('No Side Effects','Mild Side Effects','Moderate Side Effects','Severe Side Effects','Extremely Severe Side Effects'))
all_drugs_df <- read.csv("drugLibTest_raw.csv")
all_drugs_df$effectiveness <- factor(all_drugs_df$effectiveness, levels=c('Ineffective','Marginally Effective','Moderately Effective','Considerably Effective','Highly Effective'))
all_drugs_df$sideEffects <- factor(all_drugs_df$sideEffects,levels=c('No Side Effects','Mild Side Effects','Moderate Side Effects','Severe Side Effects','Extremely Severe Side Effects'))
View(all_drugs_df)
plot(x = all_drugs_df$effectiveness, all_drugs_df$rating)
plot(x = all_drugs_df$effectiveness, y = all_drugs_df$rating)
ggplot(all_drugs_df, aes(x=effectiveness, rating)) + geom_boxplot()
hist(all_drugs_df$rating)
ggplot(all_drugs_df, aes(x=sideEffects)) + geom_bar(stat="count") + facet_wrap(~effectiveness)
ggplot(all_drugs_df, aes(x=sideEffects)) + geom_bar(stat="count") + facet_wrap(~effectiveness) + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
nrow(all_drugs_df)
hist(all_drugs_df$rating)
ggplot(all_drugs_df, aes(x=rating)) + geom_bar(stat="count") + facet_wrap(~effectiveness) + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
View(all_drugs_df)
install.packages("rpart")
install.packages("rpart.plot")
instakk.packages("party")
install.packages("party")
library(sentimentr)
install.packages("sentimentr")
install.packages("tidytext")
install.packages("SnowballC")
install.packages("tm")
install.packages("wordcloud")
install.packages("reticulate")
??prediction
library(tidyverse)
library(rpart)
library(rpart.plot)
library(party)
library(kableExtra)
library(tidytext)
library(sentimentr)
library(SnowballC)
library(tm)
library(wordcloud)
library(reticulate)
